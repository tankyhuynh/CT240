{"version":3,"sources":["./src/app/chat/chat.component.html","./src/app/chat/chat.component.ts","./src/app/personal-information/account.service.ts","./src/app/menu/menu.module.ts","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/socket/socket.service.ts","./src/app/chat/chat-roomchat/chat-roomchat-header/chat-roomchat-header.component.ts","./src/app/chat/chat-roomchat/chat-roomchat-header/chat-roomchat-header.component.html","./src/app/personal-information/personal-information.component.ts","./src/app/personal-information/personal-information.component.html","./src/app/chat/chat-roomchat/chat-roomchat-send/chat-roomchat-send.component.ts","./src/app/chat/chat-roomchat/chat-roomchat-send/chat-roomchat-send.component.html","./src/app/auth/auth.guard.ts","./src/app/err-interceptor.ts","./src/app/contact/contact-content/list-friends/contact-list-friend.service.ts","./src/app/search/search.module.ts","./src/app/chat/chat-menu/chat-menu.component.html","./src/app/chat/chat-menu/chat-menu.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/chat/chat-roomchat/chat-roomchat-send/sendFile.service.ts","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/app.module.ts","./src/app/chat/chat.service.ts","./src/app/socket/VCall.model.ts","./src/app/personal-information/profile.service.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/sharing.service.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/signup/mime-type.validator.ts","./src/app/menu/menu-routing.module.ts","./src/app/relogin/relogin.component.ts","./src/app/relogin/relogin.component.html","./src/app/search/search-routing.module.ts","./src/app/chat/chat-roomchat/chat-roomchat-body/chat-roomchat-body.component.html","./src/app/chat/chat-roomchat/chat-roomchat-body/chat-roomchat-body.component.ts","./src/app/auth/auth.service.ts","./src/app/chat/chat-roomchat/chat-roomchat.component.ts","./src/app/chat/chat-roomchat/chat-roomchat.component.html","./src/app/angular-material.module.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/app/contact/contact-content/list-rooms/contact-list-rooms.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"row\">\n\n  <div class=\"col-md-4 col-12 menu\">\n    <app-chat-menu\n      [rooms]=\"rooms\"\n      [lastMessageOfRooms]=\"lastMessageOfRooms\"\n      [currentRoom]=\"currentRoom\">\n    </app-chat-menu>\n  </div>\n\n  <div class=\"col-md-8 col-12 content\" *ngIf=\"currentRoom\">\n    <app-chat-roomchat\n      [rooms]=\"rooms\"\n      [profileOfFriends]=\"profileOfFriends\"\n      [chatroom]=\"currentRoom\"\n      [messages]=\"messages\">\n    </app-chat-roomchat>\n  </div>\n\n</div>\n","import { error } from '@angular/compiler/src/util';\nimport {\n  AfterViewChecked,\n  ElementRef,\n  ViewChild,\n  Component,\n  EventEmitter,\n  OnInit,\n  Output,\n  Input,\n} from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { UserData } from '../auth/user.model';\nimport { RoomModel } from '../contact/contact-content/contact-add-room/contact-add-room.model';\nimport { ContactAddRoomService } from '../contact/contact-content/contact-add-room/contact-add-room.service';\nimport { ContactListFriendService } from '../contact/contact-content/list-friends/contact-list-friend.service';\nimport { FriendModel } from '../contact/contact-content/list-friends/friend.model';\nimport { ContactListRoomService } from '../contact/contact-content/list-rooms/contact-list-rooms.service';\nimport { ProfileModel } from '../personal-information/profile.model';\nimport { ProfileService } from '../personal-information/profile.service';\nimport { SharingService } from '../sharing.service';\nimport { SocketService } from '../socket/socket.service';\nimport { MessageModel } from './chat-roomchat/chat-roomchat-message.model';\nimport { ChatService } from './chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css'],\n})\nexport class ChatComponent implements OnInit, AfterViewChecked {\n  tmpImgPath =\n    'https://images.pexels.com/photos/7457830/pexels-photo-7457830.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500';\n\n  currentRoom: RoomModel;\n  profileOfFriends: Array<any> = [];\n\n  rooms: RoomModel[] = [];\n  messages: MessageModel[] = [];\n  lastMessageOfRooms: Array<any> = [];\n\n  currentUserId: string = localStorage.getItem('userId');\n\n  profiles: ProfileModel[] = [];\n\n  constructor(\n    private sharingService: SharingService,\n    private route: ActivatedRoute,\n    private chatService: ChatService,\n    private listFriendService: ContactListFriendService,\n    private profileService: ProfileService,\n    private socketService: SocketService,\n    private roomService: ContactListRoomService\n  ) {}\n\n  ngOnInit(): void {\n\n    this.fetchAllData();\n\n    this.socketService.onMessage().subscribe((newMessage: any) => {\n      this.updateLastMessageOfAllRoom();\n    });\n\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('roomId')) {\n        const roomId = paramMap.get('roomId');\n\n        this.roomService.getOneById(roomId).subscribe((response: any) => {\n          this.currentRoom = response.data;\n          this.currentRoom.top = 500;\n\n          console.log(this.currentRoom);\n\n          //Change status all message in room read\n          console.log(`currentRoom Name: ${this.currentRoom.name}`);\n          this.sharingService.changeMessageInRoomRead({\n            roomId: this.currentRoom?._id,\n            value: false,\n          });\n\n          this.fetchAllData();\n\n        });\n\n        this.roomService\n          .getAllMessageByIdRoom(roomId)\n          .subscribe((response: any) => {\n            console.log('get all messages in chat');\n            this.messages = response.data;\n          });\n\n        this.roomService.getMembersById(roomId).subscribe((response: any) => {\n          const responseData = response.data;\n          console.log('members of room: ');\n          console.log(responseData);\n\n          // this.profileOfFriends = responseData;\n          responseData.forEach((element) => {\n            this.profileOfFriends[element._id] = element;\n          });\n        });\n      }\n\n    });\n\n\n  }\n\n  fetchAllData(){\n    console.log('fetch all data');\n    this.roomService.getAll().subscribe((response: any) => {\n      this.rooms = response.data.data;\n\n      this.sharingService\n            .currentMessageInRommReadedSourceStatus\n            .subscribe( (newMessage:any) => {\n              this.rooms.forEach((room) => {\n                if ( room.messagelast.data?.content ) {\n                  this.lastMessageOfRooms[room._id] = room.messagelast;\n                }\n                else {\n                  room.messagelast.data.content = \"Image\";\n                }\n                this.lastMessageOfRooms[room._id] = room.messagelast;\n                if ( newMessage?.length > 0 ) {\n                  newMessage.forEach(element => {\n                    if ( element?.roomId === room._id ) {\n                      room.newMessage = element.value;\n                    }\n                  });\n                }\n              });\n            } );\n\n\n\n\n    });\n  }\n\n  updateLastMessageOfAllRoom(){\n    console.log('updateLastMessageOfAllRoom');\n    //fetch lastMessage of each room from sharing service lastMessage\n    this.sharingService\n    .lastMessage$\n    .subscribe( (lastMessage:any) => {\n      this.rooms.forEach((room) => {\n        if ( lastMessage?.length > 0 ) {\n          lastMessage.forEach(element => {\n            if ( element?.roomId === room._id ) {\n              room.messagelast.data.content = element.value;\n              this.lastMessageOfRooms[room._id] = room.messagelast;\n            }\n          });\n        }\n      });\n    } );\n  }\n\n  ngAfterViewChecked() {}\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n\nimport { environment } from '../../environments/environment';\n\nimport { ProfileModel } from \"./profile.model\";\n\n\nconst BACKEND_URL = environment.apiUrl + \"/accounts/\";\n\n@Injectable()\nexport class AccountService {\n\n  constructor(private http: HttpClient, private router: Router){};\n\n\n  changePassword(password: string){\n    const formData = new FormData();\n    formData.append(\"password\", password);\n    let reponseUser: ProfileModel;\n    return this.http\n          .put(BACKEND_URL, {password: password});\n\n  }\n\n\n\n\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AngularMaterialModule } from \"../angular-material.module\";\nimport { MenuComponent } from \"./menu.component\";\nimport { MenuRoutingModule } from \"./menu-routing.module\";\n\n\n\n@NgModule({\n  declarations: [\n    MenuComponent\n  ],\n  imports: [\n    MenuRoutingModule\n  ],\n  exports: [MenuComponent]\n})\nexport class MenuModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../socket/socket.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\n\n  ) {}\n\n  ngOnInit(): void {}\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"/api/v1\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject } from \"@angular/core\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  templateUrl: './error.component.html'\n})\nexport class ErrorComponent {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}){}\n\n}\n","<h2 mat-dialog-title>An Error occured</h2>\n\n<div mat-dialog-content>\n  <p class=\"mat-body-1\">{{ data.message }}</p>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close>Okay</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { io } from 'socket.io-client';\nimport { AutheService } from '../auth/auth.service';\nimport { MessageModel } from '../chat/chat-roomchat/chat-roomchat-message.model';\n\nimport {VCallAPI}  from './VCall.model'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  message: string = \"Hello from TanKy\";\n\n  private url = '';\n  private socket;\n\n  newMessage: MessageModel;\n\n  signal = {\n    on: (handle) => {\n        this.socket.on(\"vCall\" , handle);\n    },\n    emit: (data) => {\n      this.socket.emit(\"vCall\" ,data);\n    }\n  }\n\n  vCallAPI = new VCallAPI(this.signal, \"http://localhost:3000/public/vcall/index.html\");\n\n\n  constructor(private authService: AutheService) {}\n\n  setUpConnnection(){\n    const token = this.authService.getToken();\n    this.socket = io(this.url, {auth: {token: token}});\n  }\n\n  // Message\n  sendMessage(room: string, data:any) {\n    const DATA = {\n      content: data\n    };\n    if (DATA?.content === '') {\n      return;\n    }\n    this.socket.emit('message:send', {room: room, data: DATA});\n    this.socket.on('message:receive', (data) => {\n      this.newMessage = data;\n      console.log(this.newMessage);\n    });\n    this.message = '';\n  }\n\n  sendImage(room: string, url: string) {\n    const DATA = {\n      url: url\n    };\n    this.socket.emit('message:send', {room: room, data: DATA});\n    this.socket.on('message:receive', (data) => {\n      this.newMessage = data;\n      console.log(this.newMessage);\n    });\n    this.message = '';\n  }\n\n  public onMessage(): Observable<MessageModel> {\n    return new Observable<MessageModel>(observer => {\n        this.socket.on('message:receive', (data: MessageModel) => {\n          console.log(\"respones in socket receive message: \");\n          console.log(data);\n          observer.next(data)\n        });\n    });\n}\n\n\n\n//Listen new video call receive\nonNewVideoCall(){\n  return new Observable<MessageModel>(observer => {\n    this.socket.on(\"call:new\", data=>{\n      console.log(`from ${data?.from}`);\n       this.vCallAPI.createReceiveView(data.from);\n     })\n});\n\n\n}\n\n//Create new video call request\ncreateNewVideoCall(to: string){\n  this.socket.emit(\"call:new\", {to});\n    console.log(`to ${to}`);\n    this.vCallAPI.createCallView(to);\n\n}\n\n\n\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { UserData } from 'src/app/auth/user.model';\nimport { RoomModel } from 'src/app/contact/contact-content/contact-add-room/contact-add-room.model';\nimport { SharingService } from 'src/app/sharing.service';\nimport { SocketService } from 'src/app/socket/socket.service';\n\n@Component({\n  selector: 'app-chat-roomchat-header',\n  templateUrl: './chat-roomchat-header.component.html',\n  styleUrls: ['./chat-roomchat-header.component.css'],\n})\nexport class ChatRoomchatHeaderComponent implements OnInit {\n  @Input() imgPath: string;\n  @Input() currentRoom: RoomModel;\n\n  show: boolean = false;\n\n  constructor(\n    private showContent: SharingService,\n    private socketService: SocketService\n    ) {}\n\n  ngOnInit(): void {}\n\n  onClickShowContent() {\n    this.showContent.showContentMobile.subscribe(\n      (isShow) => (this.show = isShow)\n    );\n    this.showContent.changeShowValue(!this.show);\n  }\n\n  onCallVideo(){\n    const currentUserId = localStorage.getItem('userId');\n    const partnerId:any = (this.currentRoom.members.filter(member => member.user !== currentUserId))[0].user;\n    this.socketService\n          .createNewVideoCall(partnerId);\n  }\n\n}\n","<div class=\"row chat-box__title align-items-center justify-content-between\">\n  <div>\n    <span class=\"icon-close\" style=\"display: none\" (click)=\"onClickShowContent()\">\n      <i class=\"fas fa-arrow-left\"></i>\n    </span>\n    <img [src]=\"currentRoom?.avatar\" alt=\"\" class=\"img-fluid chat-box__title--img\" />\n    <span class=\"chat-box__title--desc\"> {{ currentRoom?.name }} </span>\n  </div>\n  <div>\n    <span (click)=\"onCallVideo()\" class=\"btn-call-video\"><i class=\"fas fa-video\"></i></span>\n  </div>\n</div>\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ProfileService } from './profile.service';\n\nimport { UserData } from '../auth/user.model'\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginComponent } from '../auth/login/login.component';\nimport { ReloginComponent } from '../relogin/relogin.component';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { mimeType } from '../auth/signup/mime-type.validator';\nimport { ProfileModel } from './profile.model';\nimport { Router } from '@angular/router';\nimport { windowCount } from 'rxjs/operators';\nimport { AccountService } from './account.service';\nimport { profile } from 'node:console';\nimport { SharingService } from '../sharing.service';\n\n@Component({\n  selector: 'app-personal-information',\n  templateUrl: './personal-information.component.html',\n  styleUrls: ['./personal-information.component.css'],\n  providers: [ProfileService, AccountService]\n})\nexport class PersonalInformationComponent implements OnInit {\n\n  userId: string = localStorage.getItem('userId');\n  phone: string = localStorage.getItem('phone');\n\n  profile: ProfileModel;\n\n  isDiable: boolean = true;\n  isLoadingProfileProcess: boolean = false;\n  isLoadingPassProcess: boolean = false;\n  isChangProfileSuccess: boolean = false;\n  isChangePassSuccessed: boolean = false;\n\n  imageURL: string;\n  form: FormGroup;\n  initialValue: any;\n\n  @ViewChild(\"username\") username: ElementRef<any>;\n  @ViewChild(\"password\") password: ElementRef<any>;\n  defaultPlaceHolderText = [\"Mật khẩu mới\", \"Xác nhận mật khẩu\"];\n\n  private tokenTimer: any;\n\n  @ViewChild(ReloginComponent)\n  public reLoginComponent: ReloginComponent;\n\n\n  constructor(\n    private profileService: ProfileService,\n    private accountService: AccountService,\n    private sharingService: SharingService,\n    private dialog: MatDialog,\n    private route: Router,\n    private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    const dialogRef = this.dialog.open(ReloginComponent, {disableClose: true});\n\n    this.form = new FormGroup({\n      'name': new FormControl({value: null, disabled: true}, {\n        validators: [Validators.required]\n      }),\n      'avatar': new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n\n    });\n\n    this.profileService\n            .getProfile()\n            .subscribe( (response:any) => {\n              this.profile = response.data;\n\n              this.form = new FormGroup({\n                'name': new FormControl({value: response.data?.name, disabled: true}, {\n                  validators: [Validators.required]\n                }),\n                'avatar': new FormControl(null, {\n                  validators: [Validators.required],\n                  asyncValidators: [mimeType]\n                })\n\n              });\n\n\n            });\n\n  }\n\n  changeDiableStatus(){\n    this.isDiable = !this.isDiable;\n    if (!this.isDiable) {\n      this.form.get('name').enable();\n      this.username.nativeElement.focus();\n    }\n    else {\n      this.defaultPlaceHolderText = [\"Mật khẩu mới\", \"Xác nhận mật khẩu\"];\n\n      this.resetForm(this.profile.name);\n      this.form.get('name').disable();\n\n    }\n  }\n\n  resetForm(name: string){\n    this.form.patchValue({name: name});\n    this.form.get('name').updateValueAndValidity();\n\n    this.form.patchValue({avatar: null});\n    this.form.get('avatar').updateValueAndValidity();\n  }\n\n\n  onFilePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({avatar: file});\n    this.form.get('avatar').updateValueAndValidity();\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imageURL = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  updateInfo(){\n    console.log(\"Updated info worked!!\");\n    this.isLoadingProfileProcess = true;\n    this.profileService\n          .updateInfo(this.userId, this.form.value.name, this.form.value.avatar)\n          .subscribe( (response:any) => {\n            this.changeDiableStatus();\n\n            this.isChangProfileSuccess = true;\n            this.setMessageChangeProfileSuccess(2);\n\n            console.log(response.data);\n            this.isLoadingProfileProcess = false;\n            const newProfile = {\n              name: response.data.name,\n              avatar: response.data.avatar\n            }\n\n            this.profileService.changeUserStatusListerner(response.data);\n            this.sharingService.changeUserData(response.data);\n            localStorage.setItem('userData', JSON.stringify(response.data));\n\n            this.resetForm(newProfile?.name);\n            this.form.get('name').disable();\n\n          } );\n  }\n\n  changePassword(){\n    this.isLoadingPassProcess = true;\n    this.accountService\n          .changePassword(this.password.nativeElement.value)\n          .subscribe( (response:any) => {\n            this.isLoadingPassProcess = false;\n            this.isChangePassSuccessed = true;\n            this.setMessageChangPassSuccess(2);\n\n          });\n  }\n\n  private setMessageChangeProfileSuccess(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.isChangProfileSuccess = false;\n    }, duration * 1000);\n    console.log('Setting timer alert message: ' + duration);\n  }\n\n  private setMessageChangPassSuccess(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.isChangePassSuccessed = false;\n    }, duration * 1000);\n    console.log('Setting timer alert message: ' + duration);\n  }\n\n}\n","<div class=\"row justify-content-center setting\">\n  <div class=\"col-md-5 col-12\">\n    <!-- Chỉnh tên -->\n    <div class=\"row justify-content-center\">\n      <mat-spinner *ngIf=\"isLoadingProfileProcess\"></mat-spinner>\n      <div\n        *ngIf=\"!isLoadingProfileProcess\"\n        class=\"col-md-11 col-12 setting-content align-self-start\"\n      >\n        <div class=\"row justify-content-between\">\n          <span>\n            <i class=\"fas fa-cog\"></i> Chỉnh sửa thông tin: #{{ userId }}\n          </span>\n        </div>\n        <form [formGroup]=\"form\" (submit)=\"updateInfo()\" method=\"POST\">\n          <div class=\"row justify-content-center\">\n            <input\n              type=\"text\"\n              class=\"add-friend__input edit-input\"\n              [value]=\"profile?.name\"\n              #username\n              formControlName=\"name\"\n              matInput\n            />\n          </div>\n\n          <div class=\"row justify-content-center\">\n            <input\n              type=\"text\"\n              class=\"add-friend__input edit-input\"\n              name=\"phone\"\n              [value]=\"phone\"\n              disabled\n              matInput\n            />\n          </div>\n\n          <div class=\"row error\" id=\"edit-name-err\"></div>\n          <div class=\"row m-3\">\n            <input\n              [disabled]=\"isDiable\"\n              type=\"file\"\n              #filePicker\n              (change)=\"onFilePicked($event)\"\n            />\n          </div>\n          <div\n            class=\"imagePreview row justify-content-center\"\n            *ngIf=\"imageURL !== '' && imageURL && form.get('avatar').valid\"\n          >\n            <img [src]=\"imageURL\" />\n          </div>\n          <div class=\"row justify-content-end\">\n            <button\n              *ngIf=\"isDiable\"\n              type=\"button\"\n              class=\"add-friend__card--icon\"\n              id=\"save-edit-user\"\n              (click)=\"changeDiableStatus()\"\n            >\n              <i class=\"fas fa-edit\"></i> Chỉnh sửa\n            </button>\n\n            <button\n              *ngIf=\"!isDiable\"\n              type=\"button\"\n              (click)=\"changeDiableStatus()\"\n              class=\"add-friend__card--icon\"\n              id=\"save-edit-user\"\n            >\n              Hủy\n            </button>\n\n            <button\n              *ngIf=\"!isDiable\"\n              type=\"submit\"\n              class=\"add-friend__card--icon\"\n              id=\"save-edit-user\"\n            >\n              <i class=\"fas fa-save\"></i> Lưu\n            </button>\n          </div>\n\n          <div *ngIf=\"isChangProfileSuccess\" class=\"text-success\">Success</div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-5 col-12\">\n    <!-- Đổi mật khẩu -->\n    <div class=\"row justify-content-center\">\n      <mat-spinner *ngIf=\"isLoadingPassProcess\"></mat-spinner>\n      <div\n        *ngIf=\"!isLoadingPassProcess\"\n        class=\"col-md-11 col-12 setting-content align-self-start\"\n      >\n        <div class=\"row justify-content-between\">\n          <span> <i class=\"fas fa-key\"></i> Đổi mật khẩu: </span>\n        </div>\n\n        <form action=\"\">\n          <div class=\"row error\" id=\"edit-password-err\"></div>\n\n          <div class=\"row justify-content-center\">\n            <input\n              type=\"password\"\n              class=\"add-friend__input\"\n              #password\n              [placeholder]=\"defaultPlaceHolderText[0]\"\n              id=\"edit-new-password\"\n              matInput\n            />\n          </div>\n          <div class=\"row error\" id=\"edit-new-password-err\"></div>\n\n          <div class=\"row justify-content-center\">\n            <input\n              matInput\n              type=\"password\"\n              class=\"add-friend__input\"\n              #repassword\n              [placeholder]=\"defaultPlaceHolderText[1]\"\n              id=\"edit-re-password\"\n            />\n          </div>\n          <div class=\"row error\" id=\"edit-re-password-err\"></div>\n\n          <div class=\"row justify-content-end\">\n            <button\n              type=\"submit\"\n              class=\"add-friend__card--icon\"\n              (click)=\"changePassword()\"\n              id=\"save-change-password\"\n              [disabled]=\"\n                password.value !== repassword.value || password.value == ''\n              \"\n            >\n              <i class=\"fas fa-save\"></i> Lưu\n            </button>\n          </div>\n\n          <div *ngIf=\"isChangePassSuccessed\" class=\"text-success\">Success</div>\n\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SocketService } from 'src/app/socket/socket.service';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { FileService } from './sendFile.service';\nimport { SharingService } from 'src/app/sharing.service';\nimport { MessageModel } from '../chat-roomchat-message.model';\nimport { url } from 'node:inspector';\n\n@Component({\n  selector: 'app-chat-roomchat-send',\n  templateUrl: './chat-roomchat-send.component.html',\n  styleUrls: ['./chat-roomchat-send.component.css'],\n})\nexport class ChatRoomchatSendComponent implements OnInit {\n  @Input() roomId: string;\n  imageURL: string;\n  form: FormGroup;\n\n  private currentUserId: string = localStorage.getItem('userId');\n\n  @ViewChild('message') message: ElementRef<any>;\n\n  constructor(\n    private socketService: SocketService,\n    private route: Router,\n    private sendfileService: FileService,\n    private sharingService: SharingService) {}\n\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      image: new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [],\n      }),\n    });\n  }\n\n  sendMessage(data: any) {\n    if ( this.form.value.image ) {\n      console.log(\"dont have image\");\n      this.sendFile(this.form.value.image);\n      if ( this.message.nativeElement.value !== '\\n' ) {\n        this.socketService.sendMessage(this.roomId, data);\n      }\n    }\n    else {\n      if ( this.message.nativeElement.value !== '\\n' ) {\n        this.socketService.sendMessage(this.roomId, data);\n      }\n    }\n    this.resetForm();\n}\n\n  sendFile(image: File){\n    this.sendfileService\n          .sendImage(image)\n          .subscribe( (response:any) => {\n            const imageUrl = response.data.url;\n            console.log('send image: ');\n            console.log(imageUrl);\n\n            const newMessage:MessageModel = {\n              room: this.roomId,\n              data: {url: imageUrl},\n              sender: this.currentUserId,\n              created_at: new Date()\n            }\n\n            this.sharingService.changeSendNewImage(newMessage);\n            this.socketService.sendImage(this.roomId, imageUrl);\n            this.resetForm();\n            this.closePreview();\n          } );\n  }\n\n\n  resetForm(){\n    this.form.patchValue({image: null});\n    this.form.get('image').updateValueAndValidity();\n    this.message.nativeElement.value = '';\n  }\n\n  onFilePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({ image: file });\n    this.form.get('image').updateValueAndValidity();\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imageURL = reader.result as string;\n    };\n    this.message.nativeElement.focus();\n    reader.readAsDataURL(file);\n  }\n\n  closePreview() {\n    this.imageURL = null;\n  }\n}\n","\n\n<div\n  class=\"filePreview row justify-content-between\"\n  *ngIf=\"imageURL !== '' && imageURL\"\n>\n  <img class=\"imagePreview\" [src]=\"imageURL\" />\n  <span class=\"filePreview__icon-close align-self-start\" (click)=\"closePreview()\">\n    <i class=\"fas fa-times\"></i>\n  </span>\n</div>\n<div class=\"row chat-box__send align-items-center\">\n  <div class=\"col-md-11 col-10\">\n    <textarea\n      class=\"chat-box__send--text\"\n      rows=\"2\"\n      #message\n      (keyup.enter)=\"sendMessage(message.value)\"\n      placeholder=\"Tin nhắn mới\"\n    ></textarea>\n  </div>\n  <div class=\"col-md-1 col-2\">\n    <div class=\"row justify-content-center\">\n      <button (click)=\"sendMessage(message.value)\" class=\"chat-box__send--btn\">\n        <i class=\"fab fa-telegram-plane\"></i>\n      </button>\n    </div>\n\n    <form\n      class=\"row justify-content-center\"\n      [formGroup]=\"form\">\n      <label for=\"send_file\" class=\"chat-box__send--btn\">\n        <i class=\"fas fa-paperclip\"></i>\n      </label>\n      <input\n        type=\"file\"\n        style=\"display: none\"\n        name=\"send_file\"\n        id=\"send_file\"\n        #filePicker\n        (change)=\"onFilePicked($event)\"\n      />\n    </form>\n\n\n\n  </div>\n</div>\n","import { Route } from \"@angular/compiler/src/core\";\nimport { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { AutheService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AutheService, private router: Router){}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n    const isAuth = this.authService.getIsAuthenticated();\n    if (!isAuth) {\n      this.router.navigate(['/auth/login']);\n    }\n    return isAuth;\n  }\n\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport { ErrorComponent } from \"./error/error.component\";\n\n@Injectable()\nexport class ErrInterceptor implements HttpInterceptor {\n\n  constructor(private dialog: MatDialog){}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(req).pipe(\n      catchError((err: HttpErrorResponse) => {\n        let errorMessage = \"\";\n        console.log(err);\n        if (err.error.error) {\n          errorMessage = err.error?.error;\n        }\n\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\n        return throwError(err);\n      })\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, Subject } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { Router } from '@angular/router'\n\nimport { environment } from \"../../../../environments/environment\";\nimport { FriendModel } from './friend.model';\n\nconst BACKEND_URL = environment.apiUrl + \"/friends/\";\n\n@Injectable({providedIn: 'root'})\nexport class ContactListFriendService {\n\n  private listFriends: FriendModel[];\n\n  constructor(private http: HttpClient, private router: Router){};\n\n  getAll(): Observable<FriendModel[]> {\n    return this.http\n      .get<FriendModel[]>\n      (BACKEND_URL).pipe(delay(1000));\n\n  }\n\n  getOneById(userId: string) {\n    return this.http\n      .get<{\n        listAddFriend: FriendModel[]\n      }>(BACKEND_URL + userId);\n  }\n\n  saveOne(friend: FriendModel) {\n    return this.http\n      .post(BACKEND_URL, friend);\n  }\n\n  update(id: string, friend: FriendModel){\n    this.http\n          .put(BACKEND_URL + id, friend);\n  }\n\n  delete(id: string){\n    return this.http\n            .delete(BACKEND_URL + id);\n  }\n\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AngularMaterialModule } from \"../angular-material.module\";\nimport { SearchRoutingModule } from \"./search-routing.module\";\nimport { SearchComponent } from \"./search.component\";\n\n\n\n@NgModule({\n  declarations: [\n    SearchComponent\n  ],\n  imports: [\n    SearchRoutingModule\n  ],\n  exports: [SearchComponent]\n})\nexport class SearchModule {}\n","<app-search>Search</app-search>\n<div class=\"row tabs-list\">\n  <div class=\"col\">\n    <div\n      class=\"row tabs-card__item align-items-center\"\n      *ngFor=\"let room of rooms\"\n      [routerLink]=\"['/chat', room._id]\"\n      routerLinkActive=\"active\"\n      (click)=\"onClickShowContent(room._id)\"\n    >\n      <div class=\"col-md-3 col-4\">\n        <img [src]=\"room?.avatar\" alt=\"\" class=\"img-fluid card__img\" />\n      </div>\n      <div class=\"col-md-9 col-8\">\n        <div class=\"row\">\n          <span class=\"card__title\">{{ room.name }}</span>\n        </div>\n\n        <span\n          style=\"float: right\"\n          matBadge=\".\"\n          *ngIf=\"\n            room.newMessage &&\n            lastMessageOfRooms[room._id].sender !== currentUserId\n          \"\n        ></span>\n\n        <div class=\"row\">\n          <i class=\"card__desc\"> {{ lastMessageOfRooms[room._id]?.data?.content }} </i>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n} from '@angular/core';\nimport { RoomModel } from 'src/app/contact/contact-content/contact-add-room/contact-add-room.model';\nimport { ContactListFriendService } from 'src/app/contact/contact-content/list-friends/contact-list-friend.service';\nimport { FriendModel } from 'src/app/contact/contact-content/list-friends/friend.model';\nimport { ContactListRoomService } from 'src/app/contact/contact-content/list-rooms/contact-list-rooms.service';\nimport { SharingService } from 'src/app/sharing.service';\nimport { SocketService } from 'src/app/socket/socket.service';\nimport { MessageModel } from '../chat-roomchat/chat-roomchat-message.model';\n\n@Component({\n  selector: 'app-chat-menu',\n  templateUrl: './chat-menu.component.html',\n  styleUrls: ['./chat-menu.component.css'],\n})\nexport class ChatMenuComponent implements OnInit {\n  @Input() imgPath: string;\n\n  currentUserId: string = localStorage.getItem('userId');\n\n  @Input() currentRoom: RoomModel;\n  @Input() rooms: Array<any> = [];\n  @Input() lastMessageOfRooms: Array<any> = [];\n\n  show: boolean = false;\n  haveNewMessage: Array<boolean> = [];\n  isMessageInRoomRead: Array<any> = [];\n\n  constructor(\n    private sharingService: SharingService,\n    private listFriendService: ContactListFriendService,\n    private socketService: SocketService,\n    private roomsService: ContactListRoomService\n  ) {}\n\n  ngOnInit(): void {\n\n    this.socketService.onMessage().subscribe((newMessage: any) => {\n      this.updateRoomStatus(newMessage, true)\n      if ( !newMessage?.data?.content ) {\n        newMessage.data.content = \"Image\";\n      }\n    });\n\n  }\n\n  updateRoomStatus(newMessage: any, status: boolean){\n    this.sharingService.changeLastMessageOfRoom({roomId: newMessage.room, value: newMessage.data.content});\n\n    this.rooms.forEach((room) => {\n        if (room._id === newMessage.roomId) {\n          room.newMessage = status;\n        }\n    });\n  }\n\n  onClickShowContent(id: string) {\n    this.sharingService.showContentMobile.subscribe(\n      (isShow) => (this.show = isShow)\n    );\n    this.sharingService.changeShowValue(!this.show);\n\n    //Seen all message in current room\n    this.seenAllMessage(id);\n  }\n\n  seenAllMessage(id: string) {\n    this.rooms.forEach((room) => {\n      if (room._id === id) {\n        room.newMessage = false;\n      }\n    });\n    this.sharingService.changeMessageInRoomRead({\n      roomId: id,\n      value: false\n    });\n\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { AutheService } from './auth/auth.service';\nimport { UserData } from './auth/user.model';\nimport { ProfileModel } from './personal-information/profile.model';\nimport { ProfileService } from './personal-information/profile.service';\nimport { SharingService } from './sharing.service';\nimport { SocketModel } from './socket/socket.model';\nimport { SocketService } from './socket/socket.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [SharingService],\n})\nexport class AppComponent implements OnInit {\n  isUserAuthenticated = false;\n  isNewMessageReceive: boolean = false;\n\n  currentUserId: string = localStorage.getItem('userId');\n  currentUser: ProfileModel;\n\n  private authListenerSub: Subscription;\n  private userListenerSub: Subscription;\n\n  private socketData: SocketModel;\n\n  menuItems = [\n    {\n      key: 'message',\n      content: 'Tin nhắn',\n      url: 'chat',\n      showBadge: false,\n      numOfPeopleWaitToReply: 0\n    },\n    {\n      key: 'contact',\n      content: 'Danh bạ',\n      url: 'contact',\n      showBadge: false,\n    },\n    {\n      key: 'personal',\n      content: 'Chỉnh sửa',\n      url: 'personal-information',\n      showBadge: false,\n    },\n  ];\n\n  constructor(\n    private profileService: ProfileService,\n    private authService: AutheService,\n    private sharingService: SharingService,\n    private socketService: SocketService\n  ) {}\n\n  ngOnInit() {\n    // this.sharingService.currentMenuItems.subscribe(newItems => this.itemsInAppComponent = newItems);\n\n    // this.sharingService.currentMenuClass.subscribe(newItems => this.menuClass = newItems);\n\n    // this.itemsInAppComponent = JSON.parse(localStorage.getItem('menuItems'));\n\n    this.authService.autoAuthUser();\n\n    this.isUserAuthenticated = this.authService.getIsAuthenticated();\n\n    this.authListenerSub = this.authService\n      .getAuthStatusListener()\n      .subscribe((isAuth) => {\n        this.isUserAuthenticated = isAuth;\n\n        if (isAuth) {this.currentUserId = this.authService.getUserId();}\n\n        this.socketService.setUpConnnection();\n\n        this.onMessageReceive();\n      });\n\n    this.socketService.setUpConnnection();\n\n    this.onMessageReceive();\n\n    this.onNewVideoCallReceive();\n\n    this.subscribeRoomStatusOfRoom();\n\n  }\n\n  onMessageReceive() {\n    this.socketService.onMessage().subscribe((newMessage: any) => {\n      if (newMessage.sender !== this.currentUserId) {\n        this.sharingService.changeMessageInRoomRead({roomId: newMessage.room, value: true});\n        this.sharingService.changeLastMessageOfRoom({roomId: newMessage.room, value: newMessage.data.content});\n      }\n    });\n  }\n\n  onNewVideoCallReceive(){\n    this.socketService\n      .onNewVideoCall()\n      .subscribe( (response:any) => {\n        console.log(\"VIdeo call init\");\n      } );\n  }\n\n\n  subscribeRoomStatusOfRoom(){\n    this.sharingService\n            .currentMessageInRommReadedSourceStatus\n            .subscribe( (newMessage:any) => {\n              if ( newMessage?.length > 0 ) {\n                let isAllMessagesRead = true;\n                newMessage.forEach(message => {\n                  if (message?.value === true) {\n                    isAllMessagesRead = false;\n                  }\n                });\n                if ( isAllMessagesRead ) {\n                  this.menuItems[0].showBadge = false;\n                }\n                else  {\n                  this.menuItems[0].showBadge = true;\n                  let numOfPeopleWaitToReply = 0;\n                  newMessage.forEach(message => {\n                    if (message?.value === true) {\n                      numOfPeopleWaitToReply ++;\n                    }\n                  });\n                  this.menuItems[0].numOfPeopleWaitToReply = numOfPeopleWaitToReply;\n                }\n\n              }\n              else {\n                this.menuItems[0].showBadge = false;\n              }\n            } );\n  }\n\n}\n","\n<div class=\"container-fluid\">\n  <app-header [isUserAuthenticated]=\"isUserAuthenticated\" [menuItems]=\"menuItems\" class=\"row\"></app-header>\n  <router-outlet class=\"row\"></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http'\n\nimport { Router } from '@angular/router'\n\nimport { environment } from \"../../../../environments/environment\";\n\nconst BACKEND_URL = environment.apiUrl + \"/images/\";\n\n@Injectable({providedIn: 'root'})\nexport class FileService {\n\n  constructor(private http: HttpClient, private router: Router){};\n\n  sendImage(image: File){\n    const formData = new FormData();\n    formData.append(\"file\", image);\n    return this.http\n          .post(BACKEND_URL, formData);\n  }\n\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { AutheService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  isUserAuthenticated = false;\n  private authListenerSub: Subscription;\n\n  @Input() items: string[][];\n  @Output() itemsChange: EventEmitter<string[][]> = new EventEmitter();\n\n  @Input() menuClass: string;\n  @Output() menuClassChange: EventEmitter<string> = new EventEmitter();\n\n  constructor(private authService: AutheService) {}\n\n  getItems(){\n    return this.items;\n  }\n\n  ngOnInit(): void {\n    this.isUserAuthenticated = this.authService.getIsAuthenticated();\n\n    this.authListenerSub = this.authService\n                  .getAuthStatusListener()\n                  .subscribe(isAuth => {\n                    this.isUserAuthenticated = isAuth;\n                  });\n  }\n\n}\n","<div [class]=\"menuClass + '_component'\">Menu herererereS</div>\n<!-- <app-search></app-search> -->\n<div *ngIf=\"isUserAuthenticated\">\n  <div *ngFor=\"let item of items\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"row justify-content-center\">\n          <span\n            *ngIf=\"isUserAuthenticated\"\n            class=\"tabs-contact__item\"\n            id=\"add-friends\"\n            mat-button\n            [routerLink]=\"item[1]\"\n            routerLinkActive=\"highlight\"\n          >\n            <i class=\"fas fa-user-plus\"></i> {{ item[0] }}\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"notification\">\n      <i class=\"far fa-comment-dots notification__icon\"></i>\n      <span class=\"notification__count\">25</span>\n    </div>\n  </div>\n\n  <span\n    *ngIf=\"isUserAuthenticated\"\n    class=\"tabs-contact__item\"\n    id=\"add-friends\"\n    mat-button\n    routerLinkActive=\"highlight\"\n  >\n    <i class=\"fas fa-user-plus\"></i>\n  </span>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport {\n  HttpClientModule,\n  HttpClientXsrfModule,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\n\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { PersonalInformationComponent } from './personal-information/personal-information.component';\nimport { ErrInterceptor } from './err-interceptor';\nimport { ErrorComponent } from './error/error.component';\n\nimport { AngularMaterialModule } from './angular-material.module';\n\nimport { MenuModule } from './menu/menu.module';\nimport { SearchModule } from './search/search.module';\nimport { HomeComponent } from './home/home.component';\n\nimport { ProfileService } from './personal-information/profile.service';\nimport { SharingService } from './sharing.service';\nimport { SocketService } from './socket/socket.service';\nimport { ReloginComponent } from './relogin/relogin.component';\nimport { ListRoomOptionsComponent } from './contact/contact-content/list-rooms-options/list-room-options.component';\nimport { MatBadgeModule } from '@angular/material/badge';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PersonalInformationComponent,\n    ErrorComponent,\n    HomeComponent,\n    ReloginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MenuModule,\n    SearchModule,\n    MatBadgeModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrInterceptor, multi: true },\n    ProfileService,\n    SharingService,\n    SocketService,\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent, ListRoomOptionsComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http'\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router'\n\nimport { environment } from \"../../environments/environment\";\n\nconst BACKEND_URL = environment.apiUrl + \"/chat/\";\n\n@Injectable({providedIn: 'root'})\nexport class ChatService {\n\n  constructor(private http: HttpClient, private router: Router){};\n\n  addRoom(){\n\n  }\n\n  sendMessage(){\n\n  }\n\n  searchRoom(){\n\n  }\n\n  fetchRoomByUsername(username: string){\n    return null;\n  }\n\n  deleteRoom(){\n\n  }\n\n  updateRoom(){\n\n  }\n\n}\n","const errorBoxShow = (content)=>{\n  alert(content);\n};\nconst profile = {name: \"Lê Thành Nhân\"};\n\nexport class VCallAPI {\n\n  signal: any;\n  indexFile: any = \"/video-call.html\";\n  errorBox = {show: errorBoxShow,}\n  frProfile = profile;\n  calling = false;\n\n  constructor(signal: any, index: string) {\n      this.signal = signal;\n      this.indexFile = index;\n  };\n  /**\n   * @param {Object} config\n   */\n  setErrorBox(config){\n      this.errorBox = config;\n  }\n  /**\n   * @param {Object} config\n   */\n  setGetProfile(config){\n      this.frProfile = config;\n  }\n  /**\n   *\n   */\n  createView(){\n      if(this.calling) { this.errorBox.show(\"Only one call\"); return;}\n      this.calling =false;\n\n      const nWindow:any = window.open(this.indexFile, \"_blank\", \"top=0, left=0, height=720, width=480\",);\n      nWindow.vCall = {};\n      console.log(\"vcall\");\n      console.log(nWindow.vCall);\n      nWindow.vCall.signal = this.signal;\n      console.log('signal');\n      console.log(this.signal);\n      nWindow.vCall.frProfile = this.frProfile;\n      nWindow.onunload = (event)=>{\n          console.log(event)\n          this.calling = false;\n      }\n      return nWindow;\n  }\n  /**\n   * @param {string} to  - Indentify of receiver\n   */\n  createCallView(to) {\n      const nWindow = this.createView();\n      nWindow.vCall.to = to;\n  }\n  /**\n   * @param {string} from - Indentify of sender\n   */\n  createReceiveView(from) {\n    console.log(`from: ${from}`);\n      const nWindow = this.createView();\n      nWindow.vCall.from = from;\n  }\n\n}\n\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { elementEventFullName } from \"@angular/compiler/src/view_compiler/view_compiler\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Subject } from \"rxjs\";\n\nimport { environment } from '../../environments/environment';\nimport { UserData } from \"../auth/user.model\";\nimport { SharingService } from \"../sharing.service\";\nimport { ProfileModel } from \"./profile.model\";\n\n\nconst BACKEND_URL = environment.apiUrl + \"/profiles/\";\n\n@Injectable()\nexport class ProfileService {\n\n  private currentUserLogin: ProfileModel;\n\n  private userSource = new BehaviorSubject<ProfileModel>(null);\n  currentUserObservable = this.userSource.asObservable();\n\n  changeUserSource(newProfile: ProfileModel){\n    this.userSource.next(newProfile);\n  }\n\n  private userStatusListener = new Subject<ProfileModel>();\n  changeUserStatusListerner(newProfile: ProfileModel){\n    this.userStatusListener.next(newProfile);\n  }\n  getUserStatusListener(){\n    return this.userStatusListener.asObservable();\n  }\n\n\n  getCurrentUserLogin(){\n    return this.currentUserLogin;\n  }\n\n\n  constructor(private http: HttpClient, private router: Router){};\n\n  getProfile(){\n    return this.http\n            .get(BACKEND_URL);\n  }\n\n  findProfileOf(id: string){\n    return this.http.get(BACKEND_URL+ id);\n  }\n\n  getOneById(id: string) {\n    let reponseUser: ProfileModel;\n    return this.http\n      .get<{data: ProfileModel}>(BACKEND_URL + id);\n\n  }\n\n  changeUserProfileInLocalStorage(profile: ProfileModel){\n    this.currentUserLogin = profile;\n    this.userStatusListener.next(this.currentUserLogin);\n  }\n\n\n  updateInfo(id: string, name: string, image: File){\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"avatar\", image);\n    let reponseUser: ProfileModel;\n    return this.http\n          .put(BACKEND_URL, formData);\n\n  }\n\n\n\n\n}\n","<div class=\"row align-items-center header\" *ngIf=\"isUserAuthenticated\">\n  <nav class=\"navbar navbar-expand-lg\">\n    <span class=\"navbar-brand\">\n      <img\n        *ngIf=\"isUserAuthenticated\"\n        [src]=\"currentUser?.avatar || userDataInLocalStorage?.avatar\"\n        alt=\"\"\n        class=\"img-fluid user__avatar\"\n        routerLink=\"/personal-information\"\n      />\n      <span\n        class=\"user__name\"\n        routerLink=\"/personal-information\"\n        *ngIf=\"isUserAuthenticated\"\n      >\n        {{ currentUser?.name || userDataInLocalStorage?.name }}\n      </span>\n    </span>\n    <button\n      class=\"navbar-toggler\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n      (click)=\"showMenuMobile()\"\n    >\n      <i class=\"fas fa-bars\"></i>\n    </button>\n\n    <div\n      class=\"collapse navbar-collapse\"\n      id=\"navbarSupportedContent\"\n      *ngIf=\"!menuMobile\"\n    >\n\n      <div class=\"row justify-content-center\">\n        <div *ngFor=\"let item of menuItems\">\n          <span\n            *ngIf=\"item.showBadge && item.key === 'message'\"\n            [matBadge]=\"item?.numOfPeopleWaitToReply || '...' \"\n          ></span>\n\n          <span\n            *ngIf=\"isUserAuthenticated\"\n            class=\"user__case--item\"\n            [routerLink]=\"'/' + item.url\"\n            routerLinkActive=\"highlight\"\n          >\n            {{ item.content }}\n          </span>\n        </div>\n        <div>\n          <span\n            *ngIf=\"isUserAuthenticated\"\n            class=\"user__case--item\"\n            (click)=\"onLogout()\"\n          >\n            Đăng xuất\n          </span>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"collapse navbar-collapse\"\n      id=\"navbarSupportedContent\"\n      *ngIf=\"menuMobile\"\n    >\n      <div class=\"row justify-content-center\">\n        <div *ngFor=\"let item of menuItems\">\n          <span\n            *ngIf=\"isUserAuthenticated\"\n            class=\"user__case--item\"\n            [routerLink]=\"'/' + item.url\"\n            routerLinkActive=\"highlight\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n          >\n            {{ item.content }}\n          </span>\n        </div>\n        <div>\n          <span\n            *ngIf=\"isUserAuthenticated\"\n            class=\"user__case--item\"\n            (click)=\"onLogout()\"\n          >\n            Đăng xuất\n          </span>\n        </div>\n      </div>\n    </div>\n  </nav>\n</div>\n\n<div\n  class=\"row justify-content-center align-items-center header\"\n  *ngIf=\"!isUserAuthenticated\"\n  [ngClass]=\"{ center_sceen: !isUserAuthenticated }\"\n>\n  <li *ngIf=\"!isUserAuthenticated\">\n    <span\n      class=\"user__case--item log-res\"\n      mat-button\n      routerLink=\"/auth/login\"\n      routerLinkActive=\"mat-accent\"\n    >\n      Đăng nhập\n    </span>\n  </li>\n  <li *ngIf=\"!isUserAuthenticated\">\n    <span\n      class=\"user__case--item log-res\"\n      mat-button\n      routerLink=\"/auth/signup\"\n      routerLinkActive=\"mat-accent\"\n      >Đăng ký</span\n    >\n  </li>\n</div>\n","import { Component, Input, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { AutheService } from '../auth/auth.service';\nimport { SharingService } from '../sharing.service';\n\nimport { UserData } from '../auth/user.model';\nimport { ProfileService } from '../personal-information/profile.service';\nimport { ProfileModel } from '../personal-information/profile.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy, OnChanges {\n  @Input() isUserAuthenticated = false;\n  menuMobile = false;\n  @Input() socketChangeIn: string;\n\n  private authListenerSub: Subscription;\n  private userListenerSub: Subscription;\n\n  currentUser: ProfileModel;\n  userDataInLocalStorage: ProfileModel;\n  tmpImgPath =\n    'https://images.pexels.com/photos/4397900/pexels-photo-4397900.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260';\n\n  @Input() menuItems: any;\n\n  constructor(\n    private authService: AutheService,\n    private router: Router,\n    private sharingService: SharingService,\n    public profileService: ProfileService\n  ) {}\n\n  ngOnChanges() {\n    console.log('Data in header changed');\n  }\n\n  ngOnInit() {\n    this.isUserAuthenticated = this.authService.getIsAuthenticated();\n\n    if (localStorage.getItem('userData')) {\n      this.userDataInLocalStorage = JSON.parse(\n        localStorage.getItem('userData')\n      );\n    }\n\n    this.authListenerSub = this.authService\n      .getAuthStatusListener()\n      .subscribe((isAuth) => {\n        this.isUserAuthenticated = isAuth;\n      });\n\n    this.sharingService.currentUserData.subscribe((currentUser) => {\n      if (currentUser) {\n        this.currentUser = currentUser;\n      } else {\n        this.userListenerSub = this.profileService\n          .getUserStatusListener()\n          .subscribe((userData) => {\n            this.currentUser = userData;\n            localStorage.setItem('userData', JSON.stringify(userData));\n          });\n      }\n    });\n\n  }\n\n  onClick() {\n    this.router.navigate(['/']);\n  }\n\n  onTestAuthBackend() {\n    this.profileService.getOneById(this.authService.getUserId());\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSub.unsubscribe();\n  }\n\n  showMenuMobile() {\n    this.menuMobile = true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserData } from './auth/user.model';\nimport { MessageModel } from './chat/chat-roomchat/chat-roomchat-message.model';\nimport { ProfileModel } from './personal-information/profile.model';\n\n@Injectable()\nexport class SharingService {\n  private menuItemsSource = new BehaviorSubject<string[][]>(\n    ['Default message']['Default URL']\n  );\n  currentMenuItems = this.menuItemsSource.asObservable();\n\n  private menuClassSource = new BehaviorSubject<string>('base_class');\n  currentMenuClass = this.menuClassSource.asObservable();\n\n  private showSource = new BehaviorSubject<boolean>(true);\n  showContentMobile = this.showSource.asObservable();\n\n  private userDataSource = new BehaviorSubject<ProfileModel>(null);\n  currentUserData = this.userDataSource.asObservable();\n\n  private reloginSource = new BehaviorSubject<boolean>(false);\n  currentReloginStatus = this.reloginSource.asObservable();\n\n  private messageSource = new BehaviorSubject<MessageModel[]>(null);\n  currentMessageStatus = this.messageSource.asObservable();\n\n  // save history of room\n  private messageInRommReadSource = new BehaviorSubject<Array<any>>(null);\n  currentMessageInRommReadedSourceStatus = this.messageInRommReadSource.asObservable();\n  private messageReadHistory: Array<any> = [];\n\n  // save lastMessage of each room\n  // nữa đỗi từ từ qua variable and variable$ dễ đọc hơn\n  private lastMessage = new BehaviorSubject<Array<any>>(null);\n  lastMessage$ = this.lastMessage.asObservable();\n  private lastMessageHistory: Array<any> = [];\n\n  private sendNewImageSource = new BehaviorSubject<MessageModel>(null);\n  currentSendNewImageStatus = this.sendNewImageSource.asObservable();\n\n\n  constructor() {}\n\n  changeSendNewImage(message: MessageModel) {\n    this.sendNewImageSource.next(message);\n  }\n\n  changeMessageInRoomRead(data) {\n    if ( this.messageReadHistory.length > 0 ) {\n      this.messageReadHistory.forEach((history:any) => {\n        if ( history?.roomId !== data?.roomId ) {\n          this.messageReadHistory.push(data);\n        }\n        else {\n          if(history?.value !== data?.value){\n            const index = this.messageReadHistory.indexOf(history);\n            this.messageReadHistory[index]  = data;\n          }\n        }\n      })\n    }\n    else {\n      this.messageReadHistory.push(data);\n    }\n    this.messageInRommReadSource.next(this.messageReadHistory);\n  }\n\n  changeLastMessageOfRoom(data) {\n    if ( this.lastMessageHistory.length > 0 ) {\n      this.lastMessageHistory.forEach((history:any) => {\n        if ( history?.roomId !== data?.roomId ) {\n          this.lastMessageHistory.push(data);\n        }\n        else {\n          if(history?.value !== data?.value){\n            const index = this.lastMessageHistory.indexOf(history);\n            this.lastMessageHistory[index]  = data;\n          }\n        }\n      })\n    }\n    else {\n      this.lastMessageHistory.push(data);\n    }\n    this.lastMessage.next(this.lastMessageHistory);\n  }\n\n  changeMessage(messages: MessageModel[]) {\n    this.messageSource.next(messages);\n  }\n\n  changeReloginStatus(isRelogin: boolean) {\n    this.reloginSource.next(isRelogin);\n  }\n\n  changeUserData(userData: ProfileModel) {\n    this.userDataSource.next(userData);\n  }\n\n  changeMenuItems(message: string[][]) {\n    this.menuItemsSource.next(message);\n  }\n\n  changeMenuClass(message: string) {\n    this.menuClassSource.next(message);\n  }\n\n  changeShowValue(showContentMobile: boolean) {\n    this.showSource.next(showContentMobile);\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { AutheService } from \"./auth.service\";\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AutheService){}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const authToken = this.authService.getToken();\n    let token = authToken;\n    if (!authToken) {\n      token = \"empty\";\n    }\n    const authRequest = req.clone({\n      headers: req.headers.set(\"token\", token)\n    });\n    return next.handle(authRequest);\n  }\n\n}\n","import { AbstractControl } from \"@angular/forms\";\nimport { Observable, Observer, of } from \"rxjs\";\n\nexport const mimeType = (control: AbstractControl):  Promise<{[key: string]: any}> | Observable<{[key: string]: any}> => {\n  if (typeof(control.value) === \"string\") {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  const fileReaderObservable = Observable.create( (observer: Observer<{[key: string]: any}>) => {\n    fileReader.addEventListener('loadend', () => {\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n\n      let header = '';\n      let isValid = false;\n      for (let i = 0; i < arr.length; i++) {\n        header += arr[i].toString(16);\n      }\n      switch (header) {\n        case \"89504e47\":\n          isValid = true;\n          break;\n        case \"ffd8ffe0\":\n        case \"ffd8ffe1\":\n        case \"ffd8ffe2\":\n        case \"ffd8ffe3\":\n        case \"ffd8ffe8\":\n          isValid = true;\n          break;\n        default:\n          isValid = false; // Or you can use the blob.type as fallback\n          break;\n      }\n      if (isValid) {\n        observer.next(null);\n      }\n      else {\n        observer.next({inValidMimeType: true});\n      }\n      observer.complete();\n    });\n    fileReader.readAsArrayBuffer(file);\n  });\n\n  return fileReaderObservable;\n};\n","import { NgModule } from \"@angular/core\";\nimport { Router, RouterModule, Routes } from \"@angular/router\";\nimport { MenuComponent } from \"./menu.component\";\n\n\n\nconst routes: Routes = [\n  {path: '', component: MenuComponent}\n\n\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class MenuRoutingModule {}\n","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AutheService } from '../auth/auth.service';\nimport { ProfileService } from '../personal-information/profile.service';\nimport { SharingService } from '../sharing.service';\n\n@Component({\n  selector: 'app-relogin',\n  templateUrl: './relogin.component.html',\n  styleUrls: ['./relogin.component.css']\n})\nexport class ReloginComponent implements OnInit {\n\n  isLoginSuccess: boolean;\n\n  form: FormGroup;\n  @ViewChild(\"closeButton\") closeButton: ElementRef<any>;\n\n  constructor(\n    private route: Router,\n    public authSevice: AutheService,\n    public profileService: ProfileService,\n    private sharingService: SharingService,\n    private dialogRef: MatDialogRef<ReloginComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {message: string}) { }\n\n  ngOnInit(): void {\n\n    this.form = new FormGroup({\n      'password': new FormControl(null, {\n        validators: [Validators.required]\n      })\n\n    });\n  }\n\n  // Những cái liên quan đến subscribe thì xảy ra bất đồng bộ\n  // nên muốn làm j thì nên làm trong subscribe luôn chứ đừng ra ngoài nó\n  onLogin(){\n    if (this.form.invalid) {\n      return;\n    }\n    const phone = localStorage.getItem('phone');\n    this.authSevice\n          .confirmLogin(phone, this.form.value.password)\n          .subscribe( (response:any) => {\n            this.isLoginSuccess = true;\n            this.dialogRef.close();\n          }, (error) => {\n            this.isLoginSuccess = false;\n          });\n  }\n\n\n  onCancel(){\n    this.route.navigate(['/']);\n    this.dialogRef.close();\n  }\n\n  ngOnDestroy(){\n\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row justify-content-center\">\n    <span style=\"font-size: 1.1rem\">Xác nhận mật khẩu:</span>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"form-log-res\">\n      <form [formGroup]=\"form\" (submit)=\"onLogin()\">\n        <div class=\"row justify-content-center\">\n          <input\n            class=\"form-input\"\n            matInput\n            type=\"password\"\n            name=\"password\"\n            formControlName=\"password\"\n            placeholder=\"Mật khẩu\"\n          />\n        </div>\n\n        <div class=\"row justify-content-end\" mat-dialog-actions>\n          <button\n            (click)=\"onCancel()\"\n            #closeButton\n            type=\"button\"\n            class=\"form-submit\"\n          >\n            Hủy\n          </button>\n          <button (keyup.enter)=\"onLogin()\" (click)=\"onLogin()\" type=\"submit\" class=\"form-submit\">\n            Xác nhận\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { Router, RouterModule, Routes } from \"@angular/router\";\nimport { SearchComponent } from \"./search.component\";\n\n\nconst routes: Routes = [\n  {path: '', component: SearchComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule {}\n","<div #scrollMe class=\"row chat-box__body\">\n  <div class=\"col\">\n    <div *ngFor=\"let message of messages\">\n\n<!-- Receiver -->\n      <div class=\"row\" *ngIf=\"message.sender !== currentUserId && !message.data?.url\">\n\n        <img\n          *ngIf=\"profileOfFriends.length === 2\"\n          class=\"user__avatar\"\n          [src]=\"chatroom?.avatar\"\n        />\n        <img\n          *ngIf=\"profileOfFriends.length !== 2\"\n          class=\"user__avatar\"\n          [src]=\"profileOfFriends[message.sender]?.avatar\"\n        />\n        <div class=\"mess mess-left\">\n          <span [title]=\"message.created_at | date: 'medium'\">\n            {{ message.data?.content }}\n          </span>\n        </div>\n\n        <div class=\"mess-sender\">\n          <span>\n            {{ profileOfFriends[message.sender]?.name }}\n          </span>\n        </div>\n      </div>\n\n      <!-- message URL exist -->\n      <div class=\"row\" *ngIf=\"message.sender !== currentUserId && message.data?.url\">\n        <img\n          *ngIf=\"profileOfFriends.length === 2\"\n          class=\"user__avatar\"\n          [src]=\"chatroom?.avatar\"\n        />\n        <img\n          *ngIf=\"profileOfFriends.length !== 2\"\n          class=\"user__avatar\"\n          [src]=\"profileOfFriends[message.sender]?.avatar\"\n        />\n        <div class=\"mess mess-left\">\n          <img\n            [src]=\"message.data?.url\"\n            alt=\"hình ảnh\"\n            class=\"mess-image\"\n          />\n        </div>\n\n        <div class=\"mess-sender\">\n          <span>\n            {{ profileOfFriends[message.sender]?.name }}\n          </span>\n        </div>\n      </div>\n\n\n<!-- Sender -->\n      <div\n        class=\"row justify-content-end\"\n        *ngIf=\"message.sender === currentUserId && !message.data?.url\">\n        <div class=\"mess mess-right\">\n          <span [title]=\"message.created_at | date: 'medium'\">\n            {{ message.data?.content }}\n          </span>\n        </div>\n        <div class=\"mess-sender\" style=\"text-align: end\">\n          <span *ngIf=\"profileOfFriends[message.sender]?._id === currentUserId\">\n            You\n          </span>\n          <span *ngIf=\"profileOfFriends[message.sender]?._id !== currentUserId\">\n            {{ profileOfFriends[message.sender]?.name }}\n          </span>\n        </div>\n      </div>\n\n      <div\n        class=\"row justify-content-end\"\n        *ngIf=\"message.sender === currentUserId && message.data?.url\">\n\n        <div class=\"mess mess-right\">\n          <img\n            [src]=\"message.data?.url\"\n            alt=\"hình ảnh\"\n            class=\"mess-image\"\n          />\n        </div>\n      </div>\n\n\n\n    </div>\n  </div>\n</div>\n","import {\n  AfterViewChecked,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { element } from 'protractor';\nimport { RoomModel } from 'src/app/contact/contact-content/contact-add-room/contact-add-room.model';\nimport { FriendModel } from 'src/app/contact/contact-content/list-friends/friend.model';\nimport { ContactListRoomService } from 'src/app/contact/contact-content/list-rooms/contact-list-rooms.service';\nimport { ProfileService } from 'src/app/personal-information/profile.service';\nimport { SharingService } from 'src/app/sharing.service';\nimport { SocketService } from 'src/app/socket/socket.service';\nimport { MessageModel } from '../chat-roomchat-message.model';\n\n@Component({\n  selector: 'app-chat-roomchat-body',\n  templateUrl: './chat-roomchat-body.component.html',\n  styleUrls: ['./chat-roomchat-body.component.css'],\n})\nexport class ChatRoomchatBodyComponent implements OnInit, AfterViewChecked {\n  @Input() chatroom: RoomModel;\n  @Input() messages: MessageModel[] = [];\n  currentUserId: string = localStorage.getItem('userId');\n\n  @Input() profileOfFriends: Array<any> = [];\n\n  top: number;\n\n  @ViewChild('scrollMe') myScroller: ElementRef<any>;\n\n  constructor(\n    private roomService: ContactListRoomService,\n    private sharingService: SharingService,\n    private socketService: SocketService,\n    private profileService: ProfileService\n  ) {}\n\n  ngOnInit(): void {\n\n    this.socketService.onMessage().subscribe((message: MessageModel) => {\n      if(message.room === this.chatroom._id){\n        console.log('new message: ')\n        console.log(message);\n        this.messages.push(message);\n      }\n    });\n\n  }\n\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n\n  scrollToBottom(): void {\n    try {\n\n      var heightRoomChat = this.myScroller.nativeElement.scrollHeight;\n      if( this.chatroom.top != heightRoomChat ) {\n        this.myScroller.nativeElement.scrollTop =\n          this.myScroller.nativeElement.scrollHeight;\n        this.chatroom.top = this.myScroller.nativeElement.scrollHeight;\n      }\n    } catch (error) {}\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { elementEventFullName } from '@angular/compiler/src/view_compiler/view_compiler';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { ProfileModel } from '../personal-information/profile.model';\nimport { ProfileService } from '../personal-information/profile.service';\nimport { SharingService } from '../sharing.service';\nimport { AuthData } from './auth.model';\nimport { UserData } from './user.model';\n\nconst BACKEND_URL = environment.apiUrl + '/users/';\n\n@Injectable({ providedIn: 'root' })\nexport class AutheService {\n  private token: string;\n  private tokenTimer: any;\n  private authStatusListener = new Subject<boolean>();\n  private reloginStatusListener = new Subject<boolean>();\n  private isAuthenticated = false;\n  private userId: string;\n  private userData: UserData;\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  getReloginStatusListener() {\n    return this.reloginStatusListener.asObservable();\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  getIsAuthenticated() {\n    return this.isAuthenticated;\n  }\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private profileService: ProfileService,\n    private sharingService: SharingService\n  ) {}\n\n  createUser(name: string, phone: string, password: string, avatar: string) {\n    const authData: UserData = {\n      name: name,\n      phone: phone,\n      password: password,\n      avatar: avatar,\n    };\n    this.http.post(BACKEND_URL + 'register', authData).subscribe(\n      () => {\n        this.router.navigate(['/auth/login']);\n      },\n      (error) => {\n        this.authStatusListener.next(false);\n        this.router.navigate(['/auth/signup']);\n      }\n    );\n  }\n\n  confirmLogin(phone: string, password: string) {\n    const authData: AuthData = { phone: phone, password: password };\n    return this.http\n      .post<{ data: { _id: string; token: string; expiresIn: number } }>(\n        BACKEND_URL + 'login',\n        authData\n      )\n  }\n\n  login(mobilePhone: string, password: string) {\n    const authData: AuthData = { phone: mobilePhone, password: password };\n    this.http\n      .post<{ data: { _id: string; token: string; expiresIn: number } }>(\n        BACKEND_URL + 'login',\n        authData\n      )\n      .subscribe(\n        (response:any) => {\n          this.token = response.data.token;\n\n          if (this.token) {\n            const expiresInDuration = response.data.expiresIn;\n            this.setAuthTimer(expiresInDuration);\n            this.isAuthenticated = true;\n            this.userId = response.data._id;\n\n            this.authStatusListener.next(true);\n            const now = new Date();\n            const expirationDate = new Date(\n              now.getTime() + expiresInDuration * 1000 * 60\n            );\n\n            this.profileService\n                  .getOneById(this.userId)\n                  .subscribe( (response:any) => {\n                    const userData = response.data;\n\n                    this.profileService.changeUserStatusListerner(response.data);\n                    this.sharingService.changeUserData(response.data);\n                    console.log(\"change user data work!!!\");\n                    this.sharingService.currentUserData\n                          .subscribe((user) => {\n                            console.log(user);\n                          });\n\n                    this.saveDataToLocalStorage(\n                      this.token,\n                      expirationDate,\n                      this.userId,\n                      userData\n                    );\n\n\n\n                  });\n\n            this.router.navigate(['/chat']);\n          }\n        },\n        (err) => {\n          this.router.navigate(['/auth/login']);\n        }\n      );\n    return false;\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.userId = null;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearLocalStorage();\n    this.router.navigate(['/auth/login']);\n  }\n\n  private saveDataToLocalStorage(\n    token: string,\n    expiration: Date,\n    userId: string,\n    userData: ProfileModel\n  ) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expiration.toISOString());\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('userData', JSON.stringify(userData));\n  }\n\n  private clearLocalStorage() {\n    localStorage.clear();\n  }\n\n  private setAuthTimer(duration: number) {\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000 * 60);\n    console.log('Setting timer: ' + duration);\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getLocalStorageData();\n    if (!authInformation) {\n      return;\n    }\n\n    const now = new Date();\n    const expiredIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiredIn > 0) {\n      this.token = authInformation.token;\n      this.userId = authInformation.userId;\n\n      this.isAuthenticated = true;\n      this.setAuthTimer(expiredIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  private getLocalStorageData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    const userId = localStorage.getItem('userId');\n    let userInLocal = JSON?.parse(localStorage.getItem('userData'));\n\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      userId: userId,\n      userData: this.userData\n    };\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { UserData } from 'src/app/auth/user.model';\nimport { RoomModel } from 'src/app/contact/contact-content/contact-add-room/contact-add-room.model';\nimport { ProfileModel } from 'src/app/personal-information/profile.model';\nimport { SharingService } from 'src/app/sharing.service';\nimport { MessageModel } from './chat-roomchat-message.model';\n\nimport { ChatRoomModel } from './chatroom.model';\n\n@Component({\n  selector: 'app-chat-roomchat',\n  templateUrl: './chat-roomchat.component.html',\n  styleUrls: ['./chat-roomchat.component.css'],\n})\nexport class ChatRoomchatComponent implements OnInit {\n  valShowMessContent = false;\n\n  @Input() messages: MessageModel[] = [];\n  @Input() profileOfFriends: Array<any> = [];\n\n  @Input()  tmpImgPath = \"https://images.pexels.com/photos/7457830/pexels-photo-7457830.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\";\n\n\n  @Input() rooms: RoomModel[] = [];\n  @Input() chatroom: RoomModel;\n  constructor(private showContent: SharingService) {}\n\n  ngOnInit(): void {\n    this.showContent.showContentMobile.subscribe(\n      (show) => (this.valShowMessContent = show)\n    );\n  }\n}\n","<div class=\"content\" [ngClass]=\"{ show: valShowMessContent }\">\n  <!-- ChatRoom Header -->\n  <app-chat-roomchat-header [currentRoom]=\"chatroom\"></app-chat-roomchat-header>\n  <!-- end ChatRoom Header -->\n\n  <!-- ChatRoom Body -->\n  <app-chat-roomchat-body [chatroom]=\"chatroom\" [messages]=\"messages\" [profileOfFriends]=\"profileOfFriends\" ></app-chat-roomchat-body>\n  <!-- end ChatRoom Body -->\n\n  <!-- ChatRoom Send -->\n  <app-chat-roomchat-send [roomId]=\"chatroom._id\"></app-chat-roomchat-send>\n  <!-- end ChatRoom Send -->\n</div>\n","import { NgModule } from \"@angular/core\";\n\nimport { MatInputModule} from \"@angular/material/input\";\nimport { MatCardModule} from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinner, MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatListModule } from '@angular/material/list';\n\n\n@NgModule({\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatDialogModule,\n  ]\n})\nexport class AngularMaterialModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row tabs-search align-items-center justify-content-center\">\n  <input\n    type=\"text\"\n    name=\"\"\n    id=\"\"\n    class=\"tabs-search__input\"\n    placeholder=\"Search\"\n  />\n  <span class=\"tabs-search__icon\">\n    <i class=\"fas fa-search\"></i>\n  </span>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './auth/auth.guard';\nimport { MenuComponent } from './menu/menu.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { PersonalInformationComponent } from './personal-information/personal-information.component';\nimport { HomeComponent } from './home/home.component';\n\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)},\n  {path: 'menu', component: MenuComponent},\n  {path: 'chat', loadChildren: () => import('./chat/chat.module').then(m => m.ChatModule), canActivate: [AuthGuard] },\n  {path: 'chat/:roomId', component: ChatComponent, canActivate: [AuthGuard] },\n  {path: 'contact', loadChildren: () => import('./contact/contact.module').then(m => m.ContactModule), canActivate: [AuthGuard] },\n  {path: 'personal-information', component: PersonalInformationComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { environment } from '../../../../environments/environment';\nimport { ContactListRoomModel } from './contact-list-rooms.model';\nimport { RoomModel } from '../contact-add-room/contact-add-room.model';\n\nconst BACKEND_URL = environment.apiUrl + '/rooms/';\n\n@Injectable({ providedIn: 'root' })\nexport class ContactListRoomService {\n  private rooms: RoomModel;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getAll() {\n    return this.http.get(BACKEND_URL);\n  }\n\n  getAllMessageByIdRoom(id: string){\n    return this.http\n          .get(BACKEND_URL+ id + \"/messages\") ;\n  }\n\n  getOneById(roomId: string) {\n    return this.http.get<{\n      rooms: ContactListRoomModel[];\n    }>(BACKEND_URL + roomId);\n  }\n\n  getMembersById(roomId: string) {\n    return this.http.get<{\n      rooms: ContactListRoomModel[];\n    }>(BACKEND_URL + roomId + \"/members\");\n  }\n\n  saveOne(name:string, members: string[]) {\n    return this.http\n                .post(\n                  BACKEND_URL,\n                  {name: name,\n                  members: members});\n  }\n\n  update(id: string, room: RoomModel) {\n    this.http.put(BACKEND_URL + id, room);\n  }\n\n  delete(id: string) {\n    return this.http.delete(BACKEND_URL + id);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}