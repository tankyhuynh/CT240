{"version":3,"sources":["./src/app/chat/chat.component.html","./src/app/chat/chat.component.ts","./src/app/personal-information/account.service.ts","./src/app/menu/menu.module.ts","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/socket/socket.service.ts","./src/app/chat/chat-roomchat/chat-roomchat-header/chat-roomchat-header.component.ts","./src/app/chat/chat-roomchat/chat-roomchat-header/chat-roomchat-header.component.html","./src/app/personal-information/personal-information.component.ts","./src/app/personal-information/personal-information.component.html","./src/app/chat/chat-roomchat/chat-roomchat-send/chat-roomchat-send.component.ts","./src/app/chat/chat-roomchat/chat-roomchat-send/chat-roomchat-send.component.html","./src/app/auth/auth.guard.ts","./src/app/err-interceptor.ts","./src/app/contact/contact-content/list-friends/contact-list-friend.service.ts","./src/app/search/search.module.ts","./src/app/chat/chat-menu/chat-menu.component.html","./src/app/chat/chat-menu/chat-menu.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/app.module.ts","./src/app/chat/chat.service.ts","./src/app/personal-information/profile.service.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/sharing.service.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/signup/mime-type.validator.ts","./src/app/menu/menu-routing.module.ts","./src/app/relogin/relogin.component.ts","./src/app/relogin/relogin.component.html","./src/app/search/search-routing.module.ts","./src/app/chat/chat-roomchat/chat-roomchat-body/chat-roomchat-body.component.html","./src/app/chat/chat-roomchat/chat-roomchat-body/chat-roomchat-body.component.ts","./src/app/auth/auth.service.ts","./src/app/chat/chat-roomchat/chat-roomchat.component.ts","./src/app/chat/chat-roomchat/chat-roomchat.component.html","./src/app/angular-material.module.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/app/contact/contact-content/list-rooms/contact-list-rooms.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"row\">\r\n\r\n  <div class=\"col-md-4 col-12 menu\">\r\n    <app-chat-menu [imgPath]=\"tmpImgPath\" [rooms]=\"rooms\"></app-chat-menu>\r\n  </div>\r\n\r\n  <div class=\"col-md-8 col-12 content\" *ngIf=\"currentRoom\">\r\n    <app-chat-roomchat [tmpImgPath]=\"tmpImgPath\"\r\n      [messages]=\"messages\"\r\n      [chatroom]=\"currentRoom\"\r\n    ></app-chat-roomchat>\r\n  </div>\r\n\r\n</div>\r\n","import { error } from '@angular/compiler/src/util';\r\nimport {\r\n  AfterViewChecked,\r\n  ElementRef,\r\n  ViewChild,\r\n  Component,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n  Input,\r\n} from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { UserData } from '../auth/user.model';\r\nimport { RoomModel } from '../contact/contact-content/contact-add-room/contact-add-room.model';\r\nimport { ContactAddRoomService } from '../contact/contact-content/contact-add-room/contact-add-room.service';\r\nimport { ContactListFriendService } from '../contact/contact-content/list-friends/contact-list-friend.service';\r\nimport { FriendModel } from '../contact/contact-content/list-friends/friend.model';\r\nimport { ContactListRoomService } from '../contact/contact-content/list-rooms/contact-list-rooms.service';\r\nimport { ProfileModel } from '../personal-information/profile.model';\r\nimport { ProfileService } from '../personal-information/profile.service';\r\nimport { SharingService } from '../sharing.service';\r\nimport { SocketService } from '../socket/socket.service';\r\nimport { MessageModel } from './chat-roomchat/chat-roomchat-message.model';\r\nimport { ChatService } from './chat.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css'],\r\n})\r\nexport class ChatComponent implements OnInit, AfterViewChecked {\r\n  tmpImgPath = \"https://images.pexels.com/photos/7457830/pexels-photo-7457830.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\";\r\n\r\n  currentRoom: RoomModel;\r\n\r\n  rooms: RoomModel[] = [];\r\n  messages: MessageModel[] = [];\r\n  currentUserId: string = localStorage.getItem('userId');\r\n\r\n  profiles: ProfileModel[] = [];\r\n\r\n  constructor(\r\n    private sharingService: SharingService,\r\n    private route: ActivatedRoute,\r\n    private chatService: ChatService,\r\n    private listFriendService: ContactListFriendService,\r\n    private profileService: ProfileService,\r\n    private socketService: SocketService,\r\n    private roomService: ContactListRoomService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.socketService.setUpConnnection();\r\n\r\n    // this.listFriendService\r\n    // .getAll()\r\n    // .subscribe( (response:any) => {\r\n    //   this.friends = response.data.data;\r\n    //   console.log(this.friends);\r\n    // });\r\n\r\n\r\n    this.roomService\r\n          .getAll()\r\n          .subscribe( (response:any) => {\r\n            this.rooms = response.data.data;\r\n            console.log('Chat componet get all rooms');\r\n            console.log(this.rooms);\r\n          });\r\n\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has('roomId')) {\r\n        const roomId = paramMap.get('roomId');\r\n        this.roomService\r\n              .getOneById(roomId)\r\n              .subscribe( (response:any) => {\r\n                this.currentRoom = response.data;\r\n                console.log('get roomId: ');\r\n                console.log(this.currentRoom);\r\n              });\r\n\r\n        this.roomService\r\n              .getAllMessageByIdRoom(roomId)\r\n              .subscribe( (response:any) => {\r\n                console.log(\"get all messages in chat\");\r\n                this.messages = response.data;\r\n                console.log(this.messages);\r\n              } );\r\n\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  ngAfterViewChecked() {}\r\n}\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nimport { ProfileModel } from \"./profile.model\";\r\n\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/accounts/\";\r\n\r\n@Injectable()\r\nexport class AccountService {\r\n\r\n  constructor(private http: HttpClient, private router: Router){};\r\n\r\n\r\n  changePassword(password: string){\r\n    const formData = new FormData();\r\n    formData.append(\"password\", password);\r\n    let reponseUser: ProfileModel;\r\n    return this.http\r\n          .put(BACKEND_URL, {password: password});\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\nimport { MenuComponent } from \"./menu.component\";\r\nimport { MenuRoutingModule } from \"./menu-routing.module\";\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MenuComponent\r\n  ],\r\n  imports: [\r\n    MenuRoutingModule\r\n  ],\r\n  exports: [MenuComponent]\r\n})\r\nexport class MenuModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SocketService } from '../socket/socket.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"https://mean-you.herokuapp.com/api/v1\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Inject } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}){}\r\n\r\n}\r\n","<h2 mat-dialog-title>An Error occured</h2>\r\n\r\n<div mat-dialog-content>\r\n  <p class=\"mat-body-1\">{{ data.message }}</p>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Okay</button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { io } from 'socket.io-client';\r\nimport { AutheService } from '../auth/auth.service';\r\nimport { MessageModel } from '../chat/chat-roomchat/chat-roomchat-message.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocketService {\r\n\r\n  message: string = \"Hello from TanKy\";\r\n\r\n  private url = 'http://localhost:3000';\r\n  private socket;\r\n\r\n  newMessage: MessageModel;\r\n\r\n  constructor(private authService: AutheService) {}\r\n\r\n  setUpConnnection(){\r\n    const token = this.authService.getToken();\r\n    this.socket = io(this.url, {auth: {token: token}});\r\n\r\n  }\r\n\r\n  public getMessages = () => {\r\n    return Observable.create((observer) => {\r\n            this.socket.on('message:receive', (message) => {\r\n                observer.next(message);\r\n            });\r\n    });\r\n}\r\n\r\n  sendMessage(room: string, data: string) {\r\n    this.socket.emit('message:send', {room: room, data: data});\r\n    this.socket.on('message:receive', (data) => {\r\n      this.newMessage = data;\r\n      console.log(this.newMessage);\r\n    });\r\n    this.message = '';\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { UserData } from 'src/app/auth/user.model';\r\nimport { RoomModel } from 'src/app/contact/contact-content/contact-add-room/contact-add-room.model';\r\nimport { SharingService } from 'src/app/sharing.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-roomchat-header',\r\n  templateUrl: './chat-roomchat-header.component.html',\r\n  styleUrls: ['./chat-roomchat-header.component.css'],\r\n})\r\nexport class ChatRoomchatHeaderComponent implements OnInit {\r\n  @Input() imgPath: string;\r\n  @Input() currentRoom: RoomModel;\r\n\r\n  show: boolean = false;\r\n\r\n  constructor(private showContent: SharingService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onClickShowContent() {\r\n    this.showContent.showContentMobile.subscribe(\r\n      (isShow) => (this.show = isShow)\r\n    );\r\n    this.showContent.changeShowValue(!this.show);\r\n  }\r\n}\r\n","<div class=\"row chat-box__title align-items-center\">\r\n  <span class=\"icon-close\" style=\"display: none\" (click)=\"onClickShowContent()\">\r\n    <i class=\"fas fa-arrow-left\"></i>\r\n  </span>\r\n  <img [src]=\"currentRoom?.avatar\" alt=\"\" class=\"img-fluid chat-box__title--img\" />\r\n  <span class=\"chat-box__title--desc\"> {{ currentRoom?.name }} </span>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ProfileService } from './profile.service';\r\n\r\nimport { UserData } from '../auth/user.model'\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../auth/login/login.component';\r\nimport { ReloginComponent } from '../relogin/relogin.component';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { mimeType } from '../auth/signup/mime-type.validator';\r\nimport { ProfileModel } from './profile.model';\r\nimport { Router } from '@angular/router';\r\nimport { windowCount } from 'rxjs/operators';\r\nimport { AccountService } from './account.service';\r\n\r\n@Component({\r\n  selector: 'app-personal-information',\r\n  templateUrl: './personal-information.component.html',\r\n  styleUrls: ['./personal-information.component.css'],\r\n  providers: [ProfileService, AccountService]\r\n})\r\nexport class PersonalInformationComponent implements OnInit {\r\n\r\n  userId: string = localStorage.getItem('userId');\r\n  phone: string = localStorage.getItem('phone');\r\n\r\n  profile: ProfileModel;\r\n\r\n  isDiable: boolean = true;\r\n  isLoadingProfileProcess: boolean = false;\r\n  isLoadingPassProcess: boolean = false;\r\n\r\n  imageURL: string;\r\n  form: FormGroup;\r\n  initialValue: any;\r\n\r\n  @ViewChild(\"username\") username: ElementRef<any>;\r\n  @ViewChild(\"password\") password: ElementRef<any>;\r\n  defaultPlaceHolderText = [\"Mật khẩu mới\", \"Xác nhận mật khẩu\"];\r\n\r\n  constructor(\r\n    private profileService: ProfileService,\r\n    private accountService: AccountService,\r\n    private dialog: MatDialog,\r\n    private route: Router,\r\n    private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    const dialogRef = this.dialog.open(ReloginComponent, {disableClose: true});\r\n\r\n    this.profileService\r\n            .getProfile()\r\n            .subscribe( (response:any) => {\r\n              this.profile = response.data;\r\n              console.log(\"profile: \");\r\n              console.log(this.profile);\r\n\r\n              this.form = new FormGroup({\r\n                'name': new FormControl({value: response.data?.name, disabled: true}, {\r\n                  validators: [Validators.required]\r\n                }),\r\n                'avatar': new FormControl(null, {\r\n                  validators: [Validators.required],\r\n                  asyncValidators: [mimeType]\r\n                })\r\n\r\n              });\r\n\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  changeDiableStatus(){\r\n    this.isDiable = !this.isDiable;\r\n    if (!this.isDiable) {\r\n      this.form.get('name').enable();\r\n      this.username.nativeElement.focus();\r\n    }\r\n    else {\r\n      this.defaultPlaceHolderText = [\"Mật khẩu mới\", \"Xác nhận mật khẩu\"];\r\n\r\n      this.resetForm(this.profile.name);\r\n\r\n    }\r\n  }\r\n\r\n  resetForm(name: string){\r\n    this.form.patchValue({name: name});\r\n    this.form.get('name').updateValueAndValidity();\r\n\r\n    this.form.patchValue({avatar: null});\r\n    this.form.get('avatar').updateValueAndValidity();\r\n  }\r\n\r\n\r\n  onFilePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({avatar: file});\r\n    this.form.get('avatar').updateValueAndValidity();\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imageURL = reader.result as string;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  updateInfo(){\r\n    console.log(\"Updated info worked!!\");\r\n    this.isLoadingProfileProcess = true;\r\n    this.profileService\r\n          .updateInfo(this.userId, this.form.value.name, this.form.value.avatar)\r\n          .subscribe( (response:any) => {\r\n            console.log(response);\r\n            this.isLoadingProfileProcess = false;\r\n            const newProfile = {\r\n              name: response.data.name,\r\n              avatar: response.data.avatar\r\n            }\r\n            console.log(`name: ${newProfile.name}, avatar: ${newProfile.avatar}`);\r\n            this.profileService.changeUserProfileInLocalStorage(newProfile);\r\n\r\n            this.resetForm(newProfile?.name);\r\n\r\n          } );\r\n  }\r\n\r\n  changePassword(){\r\n    this.isLoadingPassProcess = true;\r\n    this.accountService\r\n          .changePassword(this.password.nativeElement.value)\r\n          .subscribe( (response:any) => {\r\n            console.log(\"Pass\");\r\n            this.isLoadingPassProcess = false;\r\n            console.log(this.password?.nativeElement?.value);\r\n            console.log(response)\r\n          });\r\n  }\r\n\r\n}\r\n","<div class=\"row justify-content-center setting\">\r\n  <div class=\"col-md-5 col-12\">\r\n    <div class=\"row\">\r\n\r\n      <!-- Chỉnh tên -->\r\n      <mat-spinner *ngIf=\"isLoadingProfileProcess\" class=\"col-md-11 col-12 setting-content align-self-start\"></mat-spinner>\r\n      <div *ngIf=\"!isLoadingProfileProcess\" class=\"col-md-11 col-12 setting-content align-self-start\">\r\n\r\n        <div class=\"row justify-content-between\">\r\n          <span>\r\n            <i class=\"fas fa-cog\"></i> Chỉnh sửa thông tin: #{{ userId }}\r\n          </span>\r\n        </div>\r\n        <form\r\n          [formGroup]=\"form\"\r\n          (submit)=\"updateInfo()\" method=\"POST\">\r\n              <div class=\"row justify-content-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"add-friend__input edit-input\"\r\n                  id=\"edit-name\"\r\n                  [value]=\"profile?.name\"\r\n                  #username\r\n                  formControlName=\"name\"\r\n                  matInput\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row justify-content-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"add-friend__input edit-input\"\r\n                  name=\"phone\"\r\n                  [value]=\"phone\"\r\n                  disabled\r\n                  matInput\r\n                />\r\n              </div>\r\n\r\n              <div class=\"row error\" id=\"edit-name-err\"></div>\r\n                  <div class=\"row m-3\">\r\n                    <input [disabled]=\"isDiable\" type=\"file\" #filePicker (change)=\"onFilePicked($event)\" />\r\n                  </div>\r\n                    <div\r\n                  class=\"imagePreview row justify-content-center\"\r\n                  *ngIf=\"imageURL !== '' && imageURL && form.get('avatar').valid\"\r\n                >\r\n                  <img [src]=\"imageURL\" />\r\n                </div>\r\n              <div class=\"row justify-content-end\">\r\n\r\n                <button\r\n                  *ngIf=\"isDiable\"\r\n                  type=\"button\"\r\n                  class=\"add-friend__card--icon\"\r\n                  id=\"save-edit-user\"\r\n                  (click)=\"changeDiableStatus()\"\r\n                >\r\n                  <i class=\"fas fa-edit\"  ></i> Chỉnh sửa\r\n                </button>\r\n\r\n                <button\r\n                  *ngIf=\"!isDiable\"\r\n                  type=\"button\"\r\n                  (click)=\"changeDiableStatus()\"\r\n                  class=\"add-friend__card--icon\"\r\n                  id=\"save-edit-user\"\r\n                >\r\n                  <i class=\"fas fa-edit\"></i> Cancel\r\n                </button>\r\n\r\n                <button\r\n                  *ngIf=\"!isDiable\"\r\n                  type=\"submit\"\r\n                  class=\"add-friend__card--icon\"\r\n                  id=\"save-edit-user\"\r\n                >\r\n                  <i class=\"fas fa-edit\"></i> Save\r\n                </button>\r\n\r\n              </div>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"row\">\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Đổi mật khẩu -->\r\n  <mat-spinner *ngIf=\"isLoadingPassProcess\" class=\"col-md-5 col-12 setting-content align-self-start\"></mat-spinner>\r\n  <div *ngIf=\"!isLoadingPassProcess\" class=\"col-md-5 col-12 setting-content align-self-start\">\r\n    <div class=\"row justify-content-between\">\r\n      <span> <i class=\"fas fa-key\"></i> Đổi mật khẩu: </span>\r\n    </div>\r\n\r\n    <form action=\"\">\r\n      <div class=\"row error\" id=\"edit-password-err\"></div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <input\r\n          type=\"password\"\r\n          class=\"add-friend__input\"\r\n          #password\r\n          [placeholder]=\"defaultPlaceHolderText[0]\"\r\n          id=\"edit-new-password\"\r\n          matInput\r\n        />\r\n      </div>\r\n      <div class=\"row error\" id=\"edit-new-password-err\"></div>\r\n\r\n      <div class=\"row justify-content-center\">\r\n        <input\r\n          matInput\r\n          type=\"password\"\r\n          class=\"add-friend__input\"\r\n          #repassword\r\n          [placeholder]=\"defaultPlaceHolderText[1]\"\r\n          id=\"edit-re-password\"\r\n        />\r\n      </div>\r\n      <div class=\"row error\" id=\"edit-re-password-err\"></div>\r\n\r\n      <div class=\"row justify-content-end\">\r\n        <button\r\n          type=\"submit\"\r\n          class=\"add-friend__card--icon\"\r\n          (click)=\"changePassword()\"\r\n          id=\"save-change-password\"\r\n          [disabled]=\" password.value !== repassword.value  \"\r\n        >\r\n          <i class=\"fas fa-save\"></i> Lưu\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SocketService } from 'src/app/socket/socket.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-roomchat-send',\r\n  templateUrl: './chat-roomchat-send.component.html',\r\n  styleUrls: ['./chat-roomchat-send.component.css']\r\n})\r\nexport class ChatRoomchatSendComponent implements OnInit {\r\n\r\n  @Input() roomId: string;\r\n\r\n  @ViewChild(\"message\") message: ElementRef<any>;\r\n\r\n  constructor(\r\n    private socketService: SocketService,\r\n    private route: Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage(data: string){\r\n    this.socketService.sendMessage(this.roomId, data);\r\n    this.message.nativeElement.value = \"\";\r\n  }\r\n\r\n}\r\n","<div class=\"row chat-box__send align-items-center\">\r\n  <div class=\"col-md-11 col-10\">\r\n    <textarea\r\n      class=\"chat-box__send--text\"\r\n      rows=\"2\"\r\n      #message\r\n      (keyup.enter)=\"sendMessage(message.value)\"\r\n      placeholder=\"Tin nhắn mới\"\r\n    ></textarea>\r\n  </div>\r\n  <div class=\"col-md-1 col-2\">\r\n    <div class=\"row justify-content-center\">\r\n      <button (click)=\"sendMessage(message.value)\" class=\"chat-box__send--btn\">\r\n        <i class=\"fab fa-telegram-plane\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"row justify-content-center\">\r\n      <span class=\"chat-box__send--btn\">\r\n        <i class=\"fas fa-paperclip\"></i>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Route } from \"@angular/compiler/src/core\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AutheService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AutheService, private router: Router){}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    const isAuth = this.authService.getIsAuthenticated();\r\n    if (!isAuth) {\r\n      this.router.navigate(['/auth/login']);\r\n    }\r\n    return isAuth;\r\n  }\r\n\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { ErrorComponent } from \"./error/error.component\";\r\n\r\n@Injectable()\r\nexport class ErrInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private dialog: MatDialog){}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return next.handle(req).pipe(\r\n      catchError((err: HttpErrorResponse) => {\r\n        let errorMessage = \"\";\r\n        console.log(err);\r\n        if (err.error.error) {\r\n          errorMessage = err.error?.error;\r\n        }\r\n\r\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\r\n        return throwError(err);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router'\r\n\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { FriendModel } from './friend.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/friends/\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ContactListFriendService {\r\n\r\n  private listFriends: FriendModel[];\r\n\r\n  constructor(private http: HttpClient, private router: Router){};\r\n\r\n  getAll(): Observable<FriendModel[]> {\r\n    return this.http\r\n      .get<FriendModel[]>\r\n      (BACKEND_URL).pipe(delay(1000));\r\n\r\n  }\r\n\r\n  getOneById(userId: string) {\r\n    return this.http\r\n      .get<{\r\n        listAddFriend: FriendModel[]\r\n      }>(BACKEND_URL + userId);\r\n  }\r\n\r\n  saveOne(friend: FriendModel) {\r\n    return this.http\r\n      .post(BACKEND_URL, friend);\r\n  }\r\n\r\n  update(id: string, friend: FriendModel){\r\n    this.http\r\n          .put(BACKEND_URL + id, friend);\r\n  }\r\n\r\n  delete(id: string){\r\n    return this.http\r\n            .delete(BACKEND_URL + id);\r\n  }\r\n\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\nimport { SearchRoutingModule } from \"./search-routing.module\";\r\nimport { SearchComponent } from \"./search.component\";\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SearchComponent\r\n  ],\r\n  imports: [\r\n    SearchRoutingModule\r\n  ],\r\n  exports: [SearchComponent]\r\n})\r\nexport class SearchModule {}\r\n","<app-search>Search</app-search>\r\n<div class=\"row tabs-list\">\r\n  <div class=\"col\">\r\n    <div\r\n      class=\"row tabs-card__item align-items-center\"\r\n      *ngFor=\"let room of rooms\"\r\n      [routerLink]=\"['/chat', room._id]\"\r\n      routerLinkActive=\"active\"\r\n      (click)=\"onClickShowContent()\"\r\n    >\r\n      <div class=\"col-md-3 col-4\">\r\n        <img [src]=\"room?.avatar\" alt=\"\" class=\"img-fluid card__img\" />\r\n      </div>\r\n      <div class=\"col-md-9 col-8\">\r\n        <div class=\"row\">\r\n          <span class=\"card__title\">{{ room.name }}</span>\r\n        </div>\r\n        <div class=\"row\">\r\n          <i class=\"card__desc\"> Tin nhắn mới nhâtshdfjgasjgfsjhbdjb </i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { RoomModel } from 'src/app/contact/contact-content/contact-add-room/contact-add-room.model';\r\nimport { ContactListFriendService } from 'src/app/contact/contact-content/list-friends/contact-list-friend.service';\r\nimport { FriendModel } from 'src/app/contact/contact-content/list-friends/friend.model';\r\nimport { SharingService } from 'src/app/sharing.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-menu',\r\n  templateUrl: './chat-menu.component.html',\r\n  styleUrls: ['./chat-menu.component.css'],\r\n})\r\nexport class ChatMenuComponent implements OnInit {\r\n  @Input() imgPath: string;\r\n\r\n  @Input() rooms: RoomModel[] = [];\r\n\r\n  show: boolean = false;\r\n\r\n  constructor(\r\n    private showContent: SharingService,\r\n    private listFriendService: ContactListFriendService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onClickShowContent() {\r\n    this.showContent.showContentMobile.subscribe(\r\n      (isShow) => (this.show = isShow)\r\n    );\r\n    this.showContent.changeShowValue(!this.show);\r\n\r\n\r\n\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\n\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { AutheService } from './auth/auth.service';\r\nimport { UserData } from './auth/user.model';\r\nimport { ProfileModel } from './personal-information/profile.model';\r\nimport { ProfileService } from './personal-information/profile.service';\r\nimport { SharingService } from './sharing.service';\r\nimport { SocketModel } from './socket/socket.model';\r\nimport { SocketService } from './socket/socket.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  providers: [\r\n    SharingService]\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  isUserAuthenticated = false;\r\n  currentUserId: string;\r\n  currentUser: UserData;\r\n\r\n  private authListenerSub: Subscription;\r\n  private userListenerSub: Subscription;\r\n\r\n  private socketData: SocketModel;\r\n\r\n  constructor(\r\n      private profileService: ProfileService,\r\n      private authService: AutheService,\r\n      private sharingData: SharingService,\r\n      private socketService: SocketService\r\n      ){};\r\n\r\n  ngOnInit(){\r\n\r\n    // this.sharingData.currentMenuItems.subscribe(newItems => this.itemsInAppComponent = newItems);\r\n\r\n    // this.sharingData.currentMenuClass.subscribe(newItems => this.menuClass = newItems);\r\n\r\n    // this.itemsInAppComponent = JSON.parse(localStorage.getItem('menuItems'));\r\n\r\n    this.authService.autoAuthUser();\r\n\r\n    this.isUserAuthenticated = this.authService.getIsAuthenticated();\r\n\r\n    this.authListenerSub = this.authService\r\n                  .getAuthStatusListener()\r\n                  .subscribe(isAuth => {\r\n                    this.isUserAuthenticated = isAuth;\r\n                  });\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n  <app-header [isUserAuthenticated]=\"isUserAuthenticated\" class=\"row\"></app-header>\r\n  <router-outlet class=\"row\"></router-outlet>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { AutheService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  isUserAuthenticated = false;\r\n  private authListenerSub: Subscription;\r\n\r\n  @Input() items: string[][];\r\n  @Output() itemsChange: EventEmitter<string[][]> = new EventEmitter();\r\n\r\n  @Input() menuClass: string;\r\n  @Output() menuClassChange: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(private authService: AutheService) {}\r\n\r\n  getItems(){\r\n    return this.items;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isUserAuthenticated = this.authService.getIsAuthenticated();\r\n\r\n    this.authListenerSub = this.authService\r\n                  .getAuthStatusListener()\r\n                  .subscribe(isAuth => {\r\n                    this.isUserAuthenticated = isAuth;\r\n                  });\r\n  }\r\n\r\n}\r\n","<div [class]=\"menuClass + '_component'\">Menu herererereS</div>\r\n<!-- <app-search></app-search> -->\r\n<div *ngIf=\"isUserAuthenticated\">\r\n  <div *ngFor=\"let item of items\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <div class=\"row justify-content-center\">\r\n          <span\r\n            *ngIf=\"isUserAuthenticated\"\r\n            class=\"tabs-contact__item\"\r\n            id=\"add-friends\"\r\n            mat-button\r\n            [routerLink]=\"item[1]\"\r\n            routerLinkActive=\"highlight\"\r\n          >\r\n            <i class=\"fas fa-user-plus\"></i> {{ item[0] }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"notification\">\r\n      <i class=\"far fa-comment-dots notification__icon\"></i>\r\n      <span class=\"notification__count\">25</span>\r\n    </div>\r\n  </div>\r\n\r\n  <span\r\n    *ngIf=\"isUserAuthenticated\"\r\n    class=\"tabs-contact__item\"\r\n    id=\"add-friends\"\r\n    mat-button\r\n    routerLinkActive=\"highlight\"\r\n  >\r\n    <i class=\"fas fa-user-plus\"></i>\r\n  </span>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport {\r\n  HttpClientModule,\r\n  HttpClientXsrfModule,\r\n  HTTP_INTERCEPTORS,\r\n} from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\nimport { AuthInterceptor } from './auth/auth-interceptor';\r\nimport { PersonalInformationComponent } from './personal-information/personal-information.component';\r\nimport { ErrInterceptor } from './err-interceptor';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\nimport { AngularMaterialModule } from './angular-material.module';\r\n\r\nimport { MenuModule } from './menu/menu.module';\r\nimport { SearchModule } from './search/search.module';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { ProfileService } from './personal-information/profile.service';\r\nimport { SharingService } from './sharing.service';\r\nimport { SocketService } from './socket/socket.service';\r\nimport { ReloginComponent } from './relogin/relogin.component';\r\nimport { ListRoomOptionsComponent } from './contact/contact-content/list-rooms-options/list-room-options.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    PersonalInformationComponent,\r\n    ErrorComponent,\r\n    HomeComponent,\r\n    ReloginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MenuModule,\r\n    SearchModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrInterceptor, multi: true },\r\n    ProfileService,\r\n    SharingService,\r\n    SocketService,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ErrorComponent, ListRoomOptionsComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router'\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/chat/\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ChatService {\r\n\r\n  constructor(private http: HttpClient, private router: Router){};\r\n\r\n  addRoom(){\r\n\r\n  }\r\n\r\n  sendMessage(){\r\n\r\n  }\r\n\r\n  searchRoom(){\r\n\r\n  }\r\n\r\n  fetchRoomByUsername(username: string){\r\n    return null;\r\n  }\r\n\r\n  deleteRoom(){\r\n\r\n  }\r\n\r\n  updateRoom(){\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { elementEventFullName } from \"@angular/compiler/src/view_compiler/view_compiler\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { UserData } from \"../auth/user.model\";\r\nimport { SharingService } from \"../sharing.service\";\r\nimport { ProfileModel } from \"./profile.model\";\r\n\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/profiles/\";\r\n\r\n@Injectable()\r\nexport class ProfileService {\r\n\r\n  private currentUserLogin: ProfileModel;\r\n\r\n  private userSource = new BehaviorSubject<UserData>(null);\r\n  currentUserObservable = this.userSource.asObservable();\r\n\r\n  private userStatusListener = new Subject<ProfileModel>();\r\n  getUserStatusListener(){\r\n    return this.userStatusListener.asObservable();\r\n  }\r\n\r\n\r\n  getCurrentUserLogin(){\r\n    return this.currentUserLogin;\r\n  }\r\n\r\n\r\n  constructor(private http: HttpClient, private router: Router){};\r\n\r\n  getProfile(){\r\n    return this.http\r\n            .get(BACKEND_URL);\r\n  }\r\n\r\n  findProfileOf(id: string){\r\n    return this.http.get(BACKEND_URL+ id);\r\n  }\r\n\r\n  getOneById(id: string) {\r\n    let reponseUser: ProfileModel;\r\n    return this.http\r\n      .get<{data: ProfileModel}>(BACKEND_URL + id)\r\n      .subscribe((response) => {\r\n        console.log(\"In profile service\");\r\n        console.log(response.data);\r\n        reponseUser = {\r\n          name: response.data.name,\r\n          avatar: response.data.avatar,\r\n        };\r\n        // this.currentUserLogin = reponseUser;\r\n        // this.userStatusListener.next(this.currentUserLogin);\r\n        console.log(\"profile: \");\r\n        console.log(reponseUser);\r\n        this.changeUserProfileInLocalStorage(reponseUser);\r\n\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n  changeUserProfileInLocalStorage(profile: ProfileModel){\r\n    this.currentUserLogin = profile;\r\n    this.userStatusListener.next(this.currentUserLogin);\r\n  }\r\n\r\n\r\n  updateInfo(id: string, name: string, image: File){\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"avatar\", image);\r\n    let reponseUser: ProfileModel;\r\n    return this.http\r\n          .put(BACKEND_URL, formData);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n<div class=\"row align-items-center header\" *ngIf=\"isUserAuthenticated\">\r\n\r\n  <nav class=\"navbar navbar-expand-lg\">\r\n    <span class=\"navbar-brand\" >\r\n      <a routerLink=\"/personal-information\" style=\"color: black; text-decoration: none;\" mat-button>\r\n      <img\r\n        *ngIf=\"isUserAuthenticated\"\r\n        [src]=\"(currentUser?.avatar || userDataInLocalStorage?.avatar) \"\r\n        alt=\"\"\r\n        class=\"img-fluid user__avatar\"\r\n      />\r\n      <span class=\"user__name\" *ngIf=\"isUserAuthenticated\"> {{ currentUser?.name || userDataInLocalStorage?.name}} </span>\r\n    </a>\r\n    </span>\r\n    <button\r\n      class=\"navbar-toggler\"\r\n      data-toggle=\"collapse\"\r\n      data-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\"\r\n      aria-expanded=\"false\"\r\n      aria-label=\"Toggle navigation\"\r\n      (click)=\"showMenuMobile()\"\r\n    >\r\n      <i class=\"fas fa-bars\"></i>\r\n    </button>\r\n\r\n    <div\r\n      class=\"collapse navbar-collapse\"\r\n      id=\"navbarSupportedContent\"\r\n      *ngIf=\"!menuMobile\"\r\n    >\r\n      <div class=\"row justify-content-center\">\r\n        <div *ngFor=\"let item of items\">\r\n          <span\r\n            *ngIf=\"isUserAuthenticated\"\r\n            class=\"user__case--item\"\r\n            [routerLink]=\"'/' + item[1]\"\r\n            routerLinkActive=\"highlight\"\r\n          >\r\n            {{ item[0] }}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span\r\n            *ngIf=\"isUserAuthenticated\"\r\n            class=\"user__case--item\"\r\n            (click)=\"onLogout()\"\r\n          >\r\n            Đăng xuất\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class=\"collapse navbar-collapse\"\r\n      id=\"navbarSupportedContent\"\r\n      *ngIf=\"menuMobile\"\r\n    >\r\n      <div class=\"row justify-content-center\">\r\n        <div *ngFor=\"let item of items\">\r\n          <span\r\n            *ngIf=\"isUserAuthenticated\"\r\n            class=\"user__case--item\"\r\n            [routerLink]=\"'/' + item[1]\"\r\n            routerLinkActive=\"highlight\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n          >\r\n            {{ item[0] }}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span\r\n            *ngIf=\"isUserAuthenticated\"\r\n            class=\"user__case--item\"\r\n            (click)=\"onLogout()\"\r\n          >\r\n            Đăng xuất\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</div>\r\n\r\n<div\r\n  class=\"row justify-content-center align-items-center header\"\r\n  *ngIf=\"!isUserAuthenticated\"\r\n  [ngClass]=\"{ center_sceen: !isUserAuthenticated }\"\r\n>\r\n  <li *ngIf=\"!isUserAuthenticated\">\r\n    <span\r\n      class=\"user__case--item log-res\"\r\n      mat-button\r\n      routerLink=\"/auth/login\"\r\n      routerLinkActive=\"mat-accent\"\r\n    >\r\n      Đăng nhập\r\n    </span>\r\n  </li>\r\n  <li *ngIf=\"!isUserAuthenticated\">\r\n    <span\r\n      class=\"user__case--item log-res\"\r\n      mat-button\r\n      routerLink=\"/auth/signup\"\r\n      routerLinkActive=\"mat-accent\"\r\n      >Đăng ký</span\r\n    >\r\n  </li>\r\n</div>\r\n","import { Component, Input, OnChanges, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AutheService } from '../auth/auth.service';\r\nimport { SharingService } from '../sharing.service';\r\n\r\nimport { UserData } from '../auth/user.model'\r\nimport { ProfileService } from '../personal-information/profile.service';\r\nimport { ProfileModel } from '../personal-information/profile.model';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input() isUserAuthenticated = false;\r\n  menuMobile = false;\r\n\r\n  private authListenerSub: Subscription;\r\n  private userListenerSub: Subscription;\r\n\r\n  currentUser: ProfileModel;\r\n  userDataInLocalStorage: ProfileModel;\r\n  tmpImgPath = \"https://images.pexels.com/photos/4397900/pexels-photo-4397900.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260\";\r\n\r\n  items = [\r\n    ['Tin nhắn', 'chat'],\r\n    ['Danh bạ', 'contact'],\r\n    ['Chỉnh sửa', 'personal-information'],\r\n  ];\r\n\r\n  constructor(\r\n    private authService: AutheService,\r\n    private router: Router,\r\n    private sharingService: SharingService,\r\n    public profileService: ProfileService\r\n  ) {}\r\n\r\n\r\n  ngOnChanges(){\r\n    console.log('Data in header changed');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.isUserAuthenticated = this.authService.getIsAuthenticated();\r\n\r\n    if ( localStorage.getItem('userData') ) {\r\n      this.userDataInLocalStorage = JSON.parse(localStorage.getItem('userData'))\r\n    }\r\n\r\n    this.authListenerSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe((isAuth) => {\r\n        this.isUserAuthenticated = isAuth;\r\n      });\r\n\r\n\r\n    this.userListenerSub = this.profileService\r\n                      .getUserStatusListener()\r\n                      .subscribe( userData => {\r\n                        this.currentUser = userData;\r\n                        console.log(\"userData: \");\r\n                        console.log(this.currentUser);\r\n                        localStorage.setItem('userData', JSON.stringify(userData));\r\n                      });\r\n  }\r\n\r\n  onClick() {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  onTestAuthBackend(){\r\n    this.profileService.getOneById(this.authService.getUserId());\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authListenerSub.unsubscribe();\r\n  }\r\n\r\n  showMenuMobile() {\r\n    this.menuMobile = true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { UserData } from './auth/user.model';\r\nimport { MessageModel } from './chat/chat-roomchat/chat-roomchat-message.model';\r\n\r\n@Injectable()\r\nexport class SharingService {\r\n  private menuItemsSource = new BehaviorSubject<string[][]>(\r\n    ['Default message']['Default URL']\r\n  );\r\n  currentMenuItems = this.menuItemsSource.asObservable();\r\n\r\n  private menuClassSource = new BehaviorSubject<string>('base_class');\r\n  currentMenuClass = this.menuClassSource.asObservable();\r\n\r\n  private showSource = new BehaviorSubject<boolean>(true);\r\n  showContentMobile = this.showSource.asObservable();\r\n\r\n  private userDataSource = new BehaviorSubject<UserData>(null);\r\n  currentUserData = this.userDataSource.asObservable();\r\n\r\n  private reloginSource = new BehaviorSubject<boolean>(false);\r\n  currentReloginStatus = this.reloginSource.asObservable();\r\n\r\n  private messageSource = new BehaviorSubject<MessageModel[]>(null);\r\n  currentMessageStatus = this.messageSource.asObservable();\r\n\r\n  constructor() {}\r\n\r\n  changeMessage(messages: MessageModel[]) {\r\n    this.messageSource.next(messages);\r\n  }\r\n\r\n  changeReloginStatus(isRelogin: boolean) {\r\n    this.reloginSource.next(isRelogin);\r\n  }\r\n\r\n  changeUserData(userData: UserData) {\r\n    this.userDataSource.next(userData);\r\n  }\r\n\r\n  changeMenuItems(message: string[][]) {\r\n    this.menuItemsSource.next(message);\r\n  }\r\n\r\n  changeMenuClass(message: string) {\r\n    this.menuClassSource.next(message);\r\n  }\r\n\r\n  changeShowValue(showContentMobile: boolean) {\r\n    this.showSource.next(showContentMobile);\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AutheService } from \"./auth.service\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authService: AutheService){}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    let token = authToken;\r\n    if (!authToken) {\r\n      token = \"empty\";\r\n    }\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set(\"token\", token)\r\n    });\r\n    return next.handle(authRequest);\r\n  }\r\n\r\n}\r\n","import { AbstractControl } from \"@angular/forms\";\r\nimport { Observable, Observer, of } from \"rxjs\";\r\n\r\nexport const mimeType = (control: AbstractControl):  Promise<{[key: string]: any}> | Observable<{[key: string]: any}> => {\r\n  if (typeof(control.value) === \"string\") {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const fileReaderObservable = Observable.create( (observer: Observer<{[key: string]: any}>) => {\r\n    fileReader.addEventListener('loadend', () => {\r\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n\r\n      let header = '';\r\n      let isValid = false;\r\n      for (let i = 0; i < arr.length; i++) {\r\n        header += arr[i].toString(16);\r\n      }\r\n      switch (header) {\r\n        case \"89504e47\":\r\n          isValid = true;\r\n          break;\r\n        case \"ffd8ffe0\":\r\n        case \"ffd8ffe1\":\r\n        case \"ffd8ffe2\":\r\n        case \"ffd8ffe3\":\r\n        case \"ffd8ffe8\":\r\n          isValid = true;\r\n          break;\r\n        default:\r\n          isValid = false; // Or you can use the blob.type as fallback\r\n          break;\r\n      }\r\n      if (isValid) {\r\n        observer.next(null);\r\n      }\r\n      else {\r\n        observer.next({inValidMimeType: true});\r\n      }\r\n      observer.complete();\r\n    });\r\n    fileReader.readAsArrayBuffer(file);\r\n  });\r\n\r\n  return fileReaderObservable;\r\n};\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Router, RouterModule, Routes } from \"@angular/router\";\r\nimport { MenuComponent } from \"./menu.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MenuComponent}\r\n\r\n\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class MenuRoutingModule {}\r\n","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { AutheService } from '../auth/auth.service';\r\nimport { ProfileService } from '../personal-information/profile.service';\r\nimport { SharingService } from '../sharing.service';\r\n\r\n@Component({\r\n  selector: 'app-relogin',\r\n  templateUrl: './relogin.component.html',\r\n  styleUrls: ['./relogin.component.css']\r\n})\r\nexport class ReloginComponent implements OnInit {\r\n\r\n  isLoginSuccess: boolean;\r\n\r\n  form: FormGroup;\r\n  @ViewChild(\"closeButton\") closeButton: ElementRef<any>;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    public authSevice: AutheService,\r\n    public profileService: ProfileService,\r\n    private sharingService: SharingService,\r\n    private dialogRef: MatDialogRef<ReloginComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: {message: string}) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.form = new FormGroup({\r\n      'password': new FormControl(null, {\r\n        validators: [Validators.required]\r\n      })\r\n\r\n    });\r\n  }\r\n\r\n  // Những cái liên quan đến subscribe thì xảy ra bất đồng bộ\r\n  // nên muốn làm j thì nên làm trong subscribe luôn chứ đừng ra ngoài nó\r\n  onLogin(){\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    const phone = localStorage.getItem('phone');\r\n    this.authSevice.confirmLogin(phone, this.form.value.password);\r\n\r\n    this.sharingService.currentReloginStatus.subscribe(isRelogin => {\r\n      this.isLoginSuccess = isRelogin;\r\n\r\n      if (this.isLoginSuccess) {\r\n        this.dialogRef.close();\r\n      }\r\n      else {\r\n\r\n      }\r\n\r\n\r\n    });\r\n  }\r\n\r\n\r\n  onCancel(){\r\n    this.route.navigate(['/']);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row justify-content-center\">\r\n    <span style=\"font-size: 1.1rem\">Xác nhận mật khẩu:</span>\r\n  </div>\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"form-log-res\">\r\n      <form [formGroup]=\"form\" (submit)=\"onLogin()\">\r\n        <div class=\"row justify-content-center\">\r\n          <input\r\n            class=\"form-input\"\r\n            matInput\r\n            type=\"password\"\r\n            name=\"password\"\r\n            formControlName=\"password\"\r\n            placeholder=\"Mật khẩu\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row justify-content-end\" mat-dialog-actions>\r\n          <button\r\n            (click)=\"onCancel()\"\r\n            #closeButton\r\n            type=\"button\"\r\n            class=\"form-submit\"\r\n          >\r\n            Hủy\r\n          </button>\r\n          <button (keyup.enter)=\"onLogin()\" (click)=\"onLogin()\" type=\"submit\" class=\"form-submit\">\r\n            Xác nhận\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Router, RouterModule, Routes } from \"@angular/router\";\r\nimport { SearchComponent } from \"./search.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: SearchComponent}\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class SearchRoutingModule {}\r\n","<div #scrollMe class=\"row chat-box__body\" >\r\n  <div class=\"col\" >\r\n    <div *ngFor=\"let message of messages\">\r\n      <div class=\"row\" *ngIf=\"message.sender !==  currentUserId\">\r\n        <div class=\"mess mess-left\" >\r\n          <span>\r\n            {{ message.data }}\r\n          </span>\r\n        </div>\r\n        <div class=\"mess-sender\">\r\n          <span>\r\n            {{ message.created_at | date:'medium' }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div class=\"row justify-content-end\" *ngIf=\"message.sender ===  currentUserId\">\r\n        <div class=\"mess mess-right\" >\r\n          <span>\r\n            {{ message.data }}\r\n          </span>\r\n        </div>\r\n        <div class=\"mess-sender\" style=\"text-align: end\" >\r\n          <span>\r\n            {{ message.created_at | date:'medium' }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n","import {\r\n  AfterViewChecked,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { RoomModel } from 'src/app/contact/contact-content/contact-add-room/contact-add-room.model';\r\nimport { ContactListRoomService } from 'src/app/contact/contact-content/list-rooms/contact-list-rooms.service';\r\nimport { SharingService } from 'src/app/sharing.service';\r\nimport { SocketService } from 'src/app/socket/socket.service';\r\nimport { MessageModel } from '../chat-roomchat-message.model';\r\n\r\nimport { ChatRoomModel } from '../chatroom.model';\r\n\r\n@Component({\r\n  selector: 'app-chat-roomchat-body',\r\n  templateUrl: './chat-roomchat-body.component.html',\r\n  styleUrls: ['./chat-roomchat-body.component.css'],\r\n})\r\nexport class ChatRoomchatBodyComponent implements OnInit, AfterViewChecked {\r\n  @Input() chatroom: RoomModel;\r\n  @Input() messages: MessageModel[] = [];\r\n  currentUserId: string = localStorage.getItem('userId');\r\n\r\n  top: number;\r\n\r\n  @ViewChild('scrollMe') myScroller: ElementRef<any>;\r\n\r\n  constructor(\r\n    private roomService: ContactListRoomService,\r\n    private sharingService: SharingService,\r\n    private socketService: SocketService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.top = 1;\r\n    this.socketService.getMessages().subscribe((message: MessageModel) => {\r\n      this.messages.push(message);\r\n      console.log('ngOnInit() chat room');\r\n      console.log(this.messages);\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    try {\r\n      var height = this.myScroller.nativeElement.scrollHeight;\r\n      if (this.top < height) {\r\n        this.myScroller.nativeElement.scrollTop = this.myScroller.nativeElement.scrollHeight;\r\n        this.top = this.myScroller.nativeElement.scrollHeight;\r\n      }\r\n    } catch (error) {}\r\n  }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { elementEventFullName } from \"@angular/compiler/src/view_compiler/view_compiler\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { ProfileModel } from \"../personal-information/profile.model\";\r\nimport { ProfileService } from \"../personal-information/profile.service\";\r\nimport { SharingService } from \"../sharing.service\";\r\nimport { AuthData } from \"./auth.model\";\r\nimport { UserData } from \"./user.model\";\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/users/\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AutheService {\r\n\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private authStatusListener = new Subject<boolean>();\r\n  private reloginStatusListener = new Subject<boolean>();\r\n  private isAuthenticated = false;\r\n  private userId: string;\r\n  private userData: UserData;\r\n\r\n\r\n  getUserId(){\r\n    return this.userId;\r\n  }\r\n\r\n  getToken(){\r\n    return this.token;\r\n  }\r\n\r\n  getReloginStatusListener(){\r\n    return this.reloginStatusListener.asObservable();\r\n  }\r\n\r\n  getAuthStatusListener(){\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n\r\n  getIsAuthenticated(){\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private profileService: ProfileService,\r\n    private sharingService: SharingService){};\r\n\r\n\r\n\r\n  createUser(name: string, phone: string, password: string, avatar: string) {\r\n    const authData: UserData = {name: name, phone: phone, password: password, avatar: avatar };\r\n    this.http\r\n      .post(BACKEND_URL + \"register\", authData)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/auth/login']);\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n        this.router.navigate(['/auth/signup']);\r\n      });\r\n  }\r\n\r\n  confirmLogin(phone: string, password: string){\r\n    const authData: AuthData = {phone: phone, password: password};\r\n    this.http\r\n          .post<{data: {_id: string, token: string, expiresIn: number}}>(BACKEND_URL + \"login\", authData)\r\n            .subscribe(response => {\r\n              this.token = response.data.token;\r\n              console.log(response.data);\r\n              if ( this.token ) {\r\n                this.sharingService.changeReloginStatus(true);\r\n                // this.router.navigate(['/']);\r\n              }\r\n            }, err => {\r\n              this.sharingService.changeReloginStatus(false);\r\n            });\r\n  }\r\n\r\n  login(mobilePhone: string, password: string){\r\n\r\n    const authData: AuthData = {phone: mobilePhone, password: password};\r\n    this.http\r\n          .post<{data: {_id: string, token: string, expiresIn: number}}>(BACKEND_URL + \"login\", authData)\r\n            .subscribe(response => {\r\n              this.token = response.data.token;\r\n              if ( this.token ) {\r\n                const expiresInDuration =  3600;\r\n                this.setAuthTimer(expiresInDuration);\r\n                this.isAuthenticated = true;\r\n                this.userId = response.data._id;\r\n\r\n                this.authStatusListener.next(true);\r\n                const now = new Date();\r\n                const expirationDate = new Date(now.getTime() + (expiresInDuration * 1000));\r\n\r\n                this.profileService.getOneById(this.userId);\r\n\r\n                this.saveDataToLocalStorage(this.token, expirationDate, this.userId, this.userData );\r\n\r\n                console.log(\"current profile login\");\r\n                console.log(this.userData);\r\n\r\n                this.router.navigate(['/chat']);\r\n\r\n              }\r\n            }, err => {\r\n              this.router.navigate(['/auth/login']);\r\n            });\r\n            return false;\r\n  }\r\n\r\n  logout(){\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.userId = null;\r\n    this.authStatusListener.next(false);\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearLocalStorage();\r\n    this.router.navigate(['/auth/login']);\r\n  }\r\n\r\n  private saveDataToLocalStorage(token: string, expiration: Date, userId: string, userData: ProfileModel){\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiration', expiration.toISOString());\r\n    localStorage.setItem('userId', userId);\r\n    localStorage.setItem('userData', JSON.stringify(userData));\r\n  }\r\n\r\n  private clearLocalStorage(){\r\n    localStorage.clear();\r\n  }\r\n\r\n  private setAuthTimer(duration: number){\r\n    this.tokenTimer = setTimeout( () => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n    console.log(\"Setting timer: \" + duration);\r\n  }\r\n\r\n  autoAuthUser(){\r\n    const authInformation = this.getLocalStorageData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n\r\n    const now = new Date();\r\n    const expiredIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if ( expiredIn > 0 ) {\r\n      this.token = authInformation.token;\r\n      this.userId = authInformation.userId;\r\n\r\n      this.isAuthenticated = true;\r\n      this.setAuthTimer( expiredIn/1000 );\r\n      this.authStatusListener.next(true);\r\n\r\n    }\r\n  }\r\n\r\n  private getLocalStorageData(){\r\n    const token = localStorage.getItem('token');\r\n    const expirationDate = localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n    let userData;\r\n\r\n    if ( !token || !expirationDate ) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n      userId: userId\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { UserData } from 'src/app/auth/user.model';\r\nimport { RoomModel } from 'src/app/contact/contact-content/contact-add-room/contact-add-room.model';\r\nimport { SharingService } from 'src/app/sharing.service';\r\nimport { MessageModel } from './chat-roomchat-message.model';\r\n\r\nimport { ChatRoomModel } from './chatroom.model';\r\n\r\n@Component({\r\n  selector: 'app-chat-roomchat',\r\n  templateUrl: './chat-roomchat.component.html',\r\n  styleUrls: ['./chat-roomchat.component.css'],\r\n})\r\nexport class ChatRoomchatComponent implements OnInit {\r\n  valShowMessContent = false;\r\n\r\n  @Input() messages: MessageModel[] = [];\r\n\r\n  @Input()  tmpImgPath = \"https://images.pexels.com/photos/7457830/pexels-photo-7457830.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\";\r\n\r\n  @Input() chatroom: RoomModel;\r\n  constructor(private showContent: SharingService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.showContent.showContentMobile.subscribe(\r\n      (show) => (this.valShowMessContent = show)\r\n    );\r\n  }\r\n}\r\n","<div class=\"content\" [ngClass]=\"{ show: valShowMessContent }\">\r\n  <!-- ChatRoom Header -->\r\n  <app-chat-roomchat-header [currentRoom]=\"chatroom\"></app-chat-roomchat-header>\r\n  <!-- end ChatRoom Header -->\r\n\r\n  <!-- ChatRoom Body -->\r\n  <app-chat-roomchat-body [chatroom]=\"chatroom\" [messages]=\"messages\" ></app-chat-roomchat-body>\r\n  <!-- end ChatRoom Body -->\r\n\r\n  <!-- ChatRoom Send -->\r\n  <app-chat-roomchat-send [roomId]=\"chatroom._id\"></app-chat-roomchat-send>\r\n  <!-- end ChatRoom Send -->\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\r\n\r\nimport { MatInputModule} from \"@angular/material/input\";\r\nimport { MatCardModule} from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinner, MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDialogModule,\r\n  ]\r\n})\r\nexport class AngularMaterialModule {\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row tabs-search align-items-center justify-content-center\">\r\n  <input\r\n    type=\"text\"\r\n    name=\"\"\r\n    id=\"\"\r\n    class=\"tabs-search__input\"\r\n    placeholder=\"Search\"\r\n  />\r\n  <span class=\"tabs-search__icon\">\r\n    <i class=\"fas fa-search\"></i>\r\n  </span>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { PersonalInformationComponent } from './personal-information/personal-information.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: HomeComponent},\r\n  {path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)},\r\n  {path: 'menu', component: MenuComponent},\r\n  {path: 'chat', loadChildren: () => import('./chat/chat.module').then(m => m.ChatModule), canActivate: [AuthGuard] },\r\n  {path: 'chat/:roomId', component: ChatComponent, canActivate: [AuthGuard] },\r\n  {path: 'contact', loadChildren: () => import('./contact/contact.module').then(m => m.ContactModule), canActivate: [AuthGuard] },\r\n  {path: 'personal-information', component: PersonalInformationComponent, canActivate: [AuthGuard] },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ContactListRoomModel } from './contact-list-rooms.model';\r\nimport { RoomModel } from '../contact-add-room/contact-add-room.model';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/rooms/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContactListRoomService {\r\n  private rooms: RoomModel;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  getAll() {\r\n    return this.http.get(BACKEND_URL);\r\n  }\r\n\r\n  getAllMessageByIdRoom(id: string){\r\n    return this.http\r\n          .get(BACKEND_URL+ id + \"/messages\") ;\r\n  }\r\n\r\n  getOneById(roomId: string) {\r\n    return this.http.get<{\r\n      rooms: ContactListRoomModel[];\r\n    }>(BACKEND_URL + roomId);\r\n  }\r\n\r\n  getMembersById(roomId: string) {\r\n    return this.http.get<{\r\n      rooms: ContactListRoomModel[];\r\n    }>(BACKEND_URL + roomId + \"/members\");\r\n  }\r\n\r\n  saveOne(name:string, members: string[]) {\r\n    return this.http\r\n                .post(\r\n                  BACKEND_URL,\r\n                  {name: name,\r\n                  members: members});\r\n  }\r\n\r\n  update(id: string, room: RoomModel) {\r\n    this.http.put(BACKEND_URL + id, room);\r\n  }\r\n\r\n  delete(id: string) {\r\n    return this.http.delete(BACKEND_URL + id);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}